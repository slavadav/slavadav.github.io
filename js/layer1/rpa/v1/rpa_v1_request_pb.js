// source: layer1/rpa/v1/rpa_v1_request.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.v1.rpa.v1.Request', null, global);
goog.exportSymbol('proto.v1.rpa.v1.RequestField', null, global);
goog.exportSymbol('proto.v1.rpa.v1.RequestFieldEnum', null, global);
goog.exportSymbol('proto.v1.rpa.v1.RequestFieldType', null, global);
goog.exportSymbol('proto.v1.rpa.v1.RequestFieldValue', null, global);
goog.exportSymbol('proto.v1.rpa.v1.RequestStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.rpa.v1.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.rpa.v1.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.rpa.v1.Request.displayName = 'proto.v1.rpa.v1.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.rpa.v1.RequestStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.rpa.v1.RequestStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.rpa.v1.RequestStatus.displayName = 'proto.v1.rpa.v1.RequestStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.rpa.v1.RequestField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.rpa.v1.RequestField.repeatedFields_, null);
};
goog.inherits(proto.v1.rpa.v1.RequestField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.rpa.v1.RequestField.displayName = 'proto.v1.rpa.v1.RequestField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.rpa.v1.RequestFieldEnum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.rpa.v1.RequestFieldEnum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.rpa.v1.RequestFieldEnum.displayName = 'proto.v1.rpa.v1.RequestFieldEnum';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.rpa.v1.RequestFieldValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.rpa.v1.RequestFieldValue.repeatedFields_, null);
};
goog.inherits(proto.v1.rpa.v1.RequestFieldValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.rpa.v1.RequestFieldValue.displayName = 'proto.v1.rpa.v1.RequestFieldValue';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.rpa.v1.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.rpa.v1.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.rpa.v1.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    seqId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: (f = msg.getStatus()) && proto.v1.rpa.v1.RequestStatus.toObject(includeInstance, f),
    authorId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    responsible: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.v1.rpa.v1.RequestFieldValue.toObject) : [],
    createdAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 9, 0),
    archived: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.rpa.v1.Request}
 */
proto.v1.rpa.v1.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.rpa.v1.Request;
  return proto.v1.rpa.v1.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.rpa.v1.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.rpa.v1.Request}
 */
proto.v1.rpa.v1.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeqId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = new proto.v1.rpa.v1.RequestStatus;
      reader.readMessage(value,proto.v1.rpa.v1.RequestStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsible(value);
      break;
    case 7:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.v1.rpa.v1.RequestFieldValue.deserializeBinaryFromReader, "", new proto.v1.rpa.v1.RequestFieldValue());
         });
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAt(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.rpa.v1.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.rpa.v1.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.rpa.v1.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSeqId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.v1.rpa.v1.RequestStatus.serializeBinaryToWriter
    );
  }
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getResponsible();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.v1.rpa.v1.RequestFieldValue.serializeBinaryToWriter);
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getArchived();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.rpa.v1.Request.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string seq_id = 2;
 * @return {string}
 */
proto.v1.rpa.v1.Request.prototype.getSeqId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setSeqId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.rpa.v1.Request.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional RequestStatus status = 4;
 * @return {?proto.v1.rpa.v1.RequestStatus}
 */
proto.v1.rpa.v1.Request.prototype.getStatus = function() {
  return /** @type{?proto.v1.rpa.v1.RequestStatus} */ (
    jspb.Message.getWrapperField(this, proto.v1.rpa.v1.RequestStatus, 4));
};


/**
 * @param {?proto.v1.rpa.v1.RequestStatus|undefined} value
 * @return {!proto.v1.rpa.v1.Request} returns this
*/
proto.v1.rpa.v1.Request.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.rpa.v1.Request.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string author_id = 5;
 * @return {string}
 */
proto.v1.rpa.v1.Request.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string responsible = 6;
 * @return {string}
 */
proto.v1.rpa.v1.Request.prototype.getResponsible = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setResponsible = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, RequestFieldValue> fields = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.v1.rpa.v1.RequestFieldValue>}
 */
proto.v1.rpa.v1.Request.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.v1.rpa.v1.RequestFieldValue>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.v1.rpa.v1.RequestFieldValue));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};


/**
 * optional uint64 created_at = 8;
 * @return {number}
 */
proto.v1.rpa.v1.Request.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 updated_at = 9;
 * @return {number}
 */
proto.v1.rpa.v1.Request.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool archived = 10;
 * @return {boolean}
 */
proto.v1.rpa.v1.Request.prototype.getArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.rpa.v1.Request} returns this
 */
proto.v1.rpa.v1.Request.prototype.setArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.rpa.v1.RequestStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.rpa.v1.RequestStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.rpa.v1.RequestStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.rpa.v1.RequestStatus}
 */
proto.v1.rpa.v1.RequestStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.rpa.v1.RequestStatus;
  return proto.v1.rpa.v1.RequestStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.rpa.v1.RequestStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.rpa.v1.RequestStatus}
 */
proto.v1.rpa.v1.RequestStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.rpa.v1.RequestStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.rpa.v1.RequestStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.rpa.v1.RequestStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.rpa.v1.RequestStatus.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestStatus} returns this
 */
proto.v1.rpa.v1.RequestStatus.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.v1.rpa.v1.RequestStatus.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestStatus} returns this
 */
proto.v1.rpa.v1.RequestStatus.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string color = 3;
 * @return {string}
 */
proto.v1.rpa.v1.RequestStatus.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestStatus} returns this
 */
proto.v1.rpa.v1.RequestStatus.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.rpa.v1.RequestField.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.rpa.v1.RequestField.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.rpa.v1.RequestField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.rpa.v1.RequestField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestField.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    enumsList: jspb.Message.toObjectList(msg.getEnumsList(),
    proto.v1.rpa.v1.RequestFieldEnum.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.rpa.v1.RequestField}
 */
proto.v1.rpa.v1.RequestField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.rpa.v1.RequestField;
  return proto.v1.rpa.v1.RequestField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.rpa.v1.RequestField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.rpa.v1.RequestField}
 */
proto.v1.rpa.v1.RequestField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.v1.rpa.v1.RequestFieldType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = new proto.v1.rpa.v1.RequestFieldEnum;
      reader.readMessage(value,proto.v1.rpa.v1.RequestFieldEnum.deserializeBinaryFromReader);
      msg.addEnums(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.rpa.v1.RequestField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.rpa.v1.RequestField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.rpa.v1.RequestField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnumsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.v1.rpa.v1.RequestFieldEnum.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.rpa.v1.RequestField.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestField} returns this
 */
proto.v1.rpa.v1.RequestField.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RequestFieldType type = 2;
 * @return {!proto.v1.rpa.v1.RequestFieldType}
 */
proto.v1.rpa.v1.RequestField.prototype.getType = function() {
  return /** @type {!proto.v1.rpa.v1.RequestFieldType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.v1.rpa.v1.RequestFieldType} value
 * @return {!proto.v1.rpa.v1.RequestField} returns this
 */
proto.v1.rpa.v1.RequestField.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.v1.rpa.v1.RequestField.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestField} returns this
 */
proto.v1.rpa.v1.RequestField.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated RequestFieldEnum enums = 4;
 * @return {!Array<!proto.v1.rpa.v1.RequestFieldEnum>}
 */
proto.v1.rpa.v1.RequestField.prototype.getEnumsList = function() {
  return /** @type{!Array<!proto.v1.rpa.v1.RequestFieldEnum>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.rpa.v1.RequestFieldEnum, 4));
};


/**
 * @param {!Array<!proto.v1.rpa.v1.RequestFieldEnum>} value
 * @return {!proto.v1.rpa.v1.RequestField} returns this
*/
proto.v1.rpa.v1.RequestField.prototype.setEnumsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.v1.rpa.v1.RequestFieldEnum=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.rpa.v1.RequestFieldEnum}
 */
proto.v1.rpa.v1.RequestField.prototype.addEnums = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.v1.rpa.v1.RequestFieldEnum, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.rpa.v1.RequestField} returns this
 */
proto.v1.rpa.v1.RequestField.prototype.clearEnumsList = function() {
  return this.setEnumsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.rpa.v1.RequestFieldEnum.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.rpa.v1.RequestFieldEnum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.rpa.v1.RequestFieldEnum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestFieldEnum.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.rpa.v1.RequestFieldEnum}
 */
proto.v1.rpa.v1.RequestFieldEnum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.rpa.v1.RequestFieldEnum;
  return proto.v1.rpa.v1.RequestFieldEnum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.rpa.v1.RequestFieldEnum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.rpa.v1.RequestFieldEnum}
 */
proto.v1.rpa.v1.RequestFieldEnum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.rpa.v1.RequestFieldEnum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.rpa.v1.RequestFieldEnum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.rpa.v1.RequestFieldEnum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestFieldEnum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.v1.rpa.v1.RequestFieldEnum.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestFieldEnum} returns this
 */
proto.v1.rpa.v1.RequestFieldEnum.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.v1.rpa.v1.RequestFieldEnum.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestFieldEnum} returns this
 */
proto.v1.rpa.v1.RequestFieldEnum.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.rpa.v1.RequestFieldValue.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.rpa.v1.RequestFieldValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.rpa.v1.RequestFieldValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestFieldValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enumIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.rpa.v1.RequestFieldValue}
 */
proto.v1.rpa.v1.RequestFieldValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.rpa.v1.RequestFieldValue;
  return proto.v1.rpa.v1.RequestFieldValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.rpa.v1.RequestFieldValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.rpa.v1.RequestFieldValue}
 */
proto.v1.rpa.v1.RequestFieldValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addEnumId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.rpa.v1.RequestFieldValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.rpa.v1.RequestFieldValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.rpa.v1.RequestFieldValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnumIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string field_id = 1;
 * @return {string}
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.getFieldId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestFieldValue} returns this
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.setFieldId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.rpa.v1.RequestFieldValue} returns this
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string enum_id = 3;
 * @return {!Array<string>}
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.getEnumIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.v1.rpa.v1.RequestFieldValue} returns this
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.setEnumIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.v1.rpa.v1.RequestFieldValue} returns this
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.addEnumId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.rpa.v1.RequestFieldValue} returns this
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.clearEnumIdList = function() {
  return this.setEnumIdList([]);
};


/**
 * optional uint64 updated_at = 4;
 * @return {number}
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.rpa.v1.RequestFieldValue} returns this
 */
proto.v1.rpa.v1.RequestFieldValue.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.v1.rpa.v1.RequestFieldType = {
  REQUESTFIELDTYPENONE: 0,
  REQUESTFIELDTYPESTRING: 1,
  REQUESTFIELDTYPETEXT: 2,
  REQUESTFIELDTYPESELECT: 3,
  REQUESTFIELDTYPEMULTISELECT: 4,
  REQUESTFIELDTYPEDATE: 5
};

goog.object.extend(exports, proto.v1.rpa.v1);
