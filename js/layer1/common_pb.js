// source: layer1/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.v1.File', null, global);
goog.exportSymbol('proto.v1.MediaPhoto', null, global);
goog.exportSymbol('proto.v1.MediaPhoto.Size', null, global);
goog.exportSymbol('proto.v1.MediaPhoto.Size.ThumbType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.MediaPhoto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.MediaPhoto.repeatedFields_, null);
};
goog.inherits(proto.v1.MediaPhoto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.MediaPhoto.displayName = 'proto.v1.MediaPhoto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.MediaPhoto.Size = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.MediaPhoto.Size, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.MediaPhoto.Size.displayName = 'proto.v1.MediaPhoto.Size';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.File.displayName = 'proto.v1.File';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.MediaPhoto.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.MediaPhoto.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.MediaPhoto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.MediaPhoto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.MediaPhoto.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accessHash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dcId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    date: jspb.Message.getFieldWithDefault(msg, 4, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sizesList: jspb.Message.toObjectList(msg.getSizesList(),
    proto.v1.MediaPhoto.Size.toObject, includeInstance),
    fileName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    size: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.MediaPhoto}
 */
proto.v1.MediaPhoto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.MediaPhoto;
  return proto.v1.MediaPhoto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.MediaPhoto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.MediaPhoto}
 */
proto.v1.MediaPhoto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDcId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 6:
      var value = new proto.v1.MediaPhoto.Size;
      reader.readMessage(value,proto.v1.MediaPhoto.Size.deserializeBinaryFromReader);
      msg.addSizes(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.MediaPhoto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.MediaPhoto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.MediaPhoto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.MediaPhoto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccessHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDcId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSizesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.v1.MediaPhoto.Size.serializeBinaryToWriter
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.MediaPhoto.Size.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.MediaPhoto.Size.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.MediaPhoto.Size} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.MediaPhoto.Size.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    file: (f = msg.getFile()) && proto.v1.File.toObject(includeInstance, f),
    w: jspb.Message.getFieldWithDefault(msg, 3, 0),
    h: jspb.Message.getFieldWithDefault(msg, 4, 0),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.MediaPhoto.Size}
 */
proto.v1.MediaPhoto.Size.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.MediaPhoto.Size;
  return proto.v1.MediaPhoto.Size.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.MediaPhoto.Size} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.MediaPhoto.Size}
 */
proto.v1.MediaPhoto.Size.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.v1.MediaPhoto.Size.ThumbType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.v1.File;
      reader.readMessage(value,proto.v1.File.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setW(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setH(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.MediaPhoto.Size.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.MediaPhoto.Size.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.MediaPhoto.Size} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.MediaPhoto.Size.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.v1.File.serializeBinaryToWriter
    );
  }
  f = message.getW();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getH();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.v1.MediaPhoto.Size.ThumbType = {
  CROP_128_128: 0,
  CROP_256_256: 1,
  CROP_1024_1024: 2,
  CROP_2048_2048: 3
};

/**
 * optional ThumbType type = 1;
 * @return {!proto.v1.MediaPhoto.Size.ThumbType}
 */
proto.v1.MediaPhoto.Size.prototype.getType = function() {
  return /** @type {!proto.v1.MediaPhoto.Size.ThumbType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.v1.MediaPhoto.Size.ThumbType} value
 * @return {!proto.v1.MediaPhoto.Size} returns this
 */
proto.v1.MediaPhoto.Size.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional File file = 2;
 * @return {?proto.v1.File}
 */
proto.v1.MediaPhoto.Size.prototype.getFile = function() {
  return /** @type{?proto.v1.File} */ (
    jspb.Message.getWrapperField(this, proto.v1.File, 2));
};


/**
 * @param {?proto.v1.File|undefined} value
 * @return {!proto.v1.MediaPhoto.Size} returns this
*/
proto.v1.MediaPhoto.Size.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.MediaPhoto.Size} returns this
 */
proto.v1.MediaPhoto.Size.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.MediaPhoto.Size.prototype.hasFile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 w = 3;
 * @return {number}
 */
proto.v1.MediaPhoto.Size.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.MediaPhoto.Size} returns this
 */
proto.v1.MediaPhoto.Size.prototype.setW = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 h = 4;
 * @return {number}
 */
proto.v1.MediaPhoto.Size.prototype.getH = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.MediaPhoto.Size} returns this
 */
proto.v1.MediaPhoto.Size.prototype.setH = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 size = 5;
 * @return {number}
 */
proto.v1.MediaPhoto.Size.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.MediaPhoto.Size} returns this
 */
proto.v1.MediaPhoto.Size.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string file_id = 1;
 * @return {string}
 */
proto.v1.MediaPhoto.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string access_hash = 2;
 * @return {string}
 */
proto.v1.MediaPhoto.prototype.getAccessHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setAccessHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 dc_id = 3;
 * @return {number}
 */
proto.v1.MediaPhoto.prototype.getDcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setDcId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 date = 4;
 * @return {number}
 */
proto.v1.MediaPhoto.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string caption = 5;
 * @return {string}
 */
proto.v1.MediaPhoto.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Size sizes = 6;
 * @return {!Array<!proto.v1.MediaPhoto.Size>}
 */
proto.v1.MediaPhoto.prototype.getSizesList = function() {
  return /** @type{!Array<!proto.v1.MediaPhoto.Size>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.MediaPhoto.Size, 6));
};


/**
 * @param {!Array<!proto.v1.MediaPhoto.Size>} value
 * @return {!proto.v1.MediaPhoto} returns this
*/
proto.v1.MediaPhoto.prototype.setSizesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.v1.MediaPhoto.Size=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.MediaPhoto.Size}
 */
proto.v1.MediaPhoto.prototype.addSizes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.v1.MediaPhoto.Size, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.clearSizesList = function() {
  return this.setSizesList([]);
};


/**
 * optional string file_name = 7;
 * @return {string}
 */
proto.v1.MediaPhoto.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 size = 8;
 * @return {number}
 */
proto.v1.MediaPhoto.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.MediaPhoto} returns this
 */
proto.v1.MediaPhoto.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.File.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.File.toObject = function(includeInstance, msg) {
  var f, obj = {
    dcId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fileId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.File}
 */
proto.v1.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.File;
  return proto.v1.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.File}
 */
proto.v1.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDcId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDcId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 dc_id = 1;
 * @return {number}
 */
proto.v1.File.prototype.getDcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.File} returns this
 */
proto.v1.File.prototype.setDcId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string file_id = 2;
 * @return {string}
 */
proto.v1.File.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.File} returns this
 */
proto.v1.File.prototype.setFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string secret = 3;
 * @return {string}
 */
proto.v1.File.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.File} returns this
 */
proto.v1.File.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.v1);
