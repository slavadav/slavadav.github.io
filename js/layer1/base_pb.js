// source: layer1/base.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var layer1_messages_pb = require('../layer1/messages_pb.js');
goog.object.extend(proto, layer1_messages_pb);
var layer1_users_pb = require('../layer1/users_pb.js');
goog.object.extend(proto, layer1_users_pb);
var layer1_account_pb = require('../layer1/account_pb.js');
goog.object.extend(proto, layer1_account_pb);
var layer1_updates_pb = require('../layer1/updates_pb.js');
goog.object.extend(proto, layer1_updates_pb);
var layer1_notification_pb = require('../layer1/notification_pb.js');
goog.object.extend(proto, layer1_notification_pb);
var layer1_common_pb = require('../layer1/common_pb.js');
goog.object.extend(proto, layer1_common_pb);
var layer1_billing_pb = require('../layer1/billing_pb.js');
goog.object.extend(proto, layer1_billing_pb);
var layer1_caller_v1_session_pb = require('../layer1/caller/v1/session_pb.js');
goog.object.extend(proto, layer1_caller_v1_session_pb);
var layer1_caller_v1_signaling_pb = require('../layer1/caller/v1/signaling_pb.js');
goog.object.extend(proto, layer1_caller_v1_signaling_pb);
var layer1_rpa_v1_rpa_v1_updates_pb = require('../layer1/rpa/v1/rpa_v1_updates_pb.js');
goog.object.extend(proto, layer1_rpa_v1_rpa_v1_updates_pb);
goog.exportSymbol('proto.v1.Update', null, global);
goog.exportSymbol('proto.v1.Update.CompanyCounter', null, global);
goog.exportSymbol('proto.v1.Update.MessageDeliveryStatus', null, global);
goog.exportSymbol('proto.v1.Update.MessageUpdatedEvent', null, global);
goog.exportSymbol('proto.v1.Update.PayloadCase', null, global);
goog.exportSymbol('proto.v1.Update.UpdateNotifySettings', null, global);
goog.exportSymbol('proto.v1.Update.UserAction', null, global);
goog.exportSymbol('proto.v1.Update.UserAction.ActionCase', null, global);
goog.exportSymbol('proto.v1.Update.UserStatus', null, global);
goog.exportSymbol('proto.v1.Update.UserStatus.StatusCase', null, global);
goog.exportSymbol('proto.v1.Update.updateAvatar', null, global);
goog.exportSymbol('proto.v1.Update.updateAvatar.AvatarCase', null, global);
goog.exportSymbol('proto.v1.Update.updateAvatar.Company', null, global);
goog.exportSymbol('proto.v1.Update.updateAvatar.User', null, global);
goog.exportSymbol('proto.v1.Update.updateCallEnded', null, global);
goog.exportSymbol('proto.v1.Update.updateChatCreated', null, global);
goog.exportSymbol('proto.v1.Update.updateChatNameChanged', null, global);
goog.exportSymbol('proto.v1.Update.updateChatPartipiantAdd', null, global);
goog.exportSymbol('proto.v1.Update.updateChatPartipiantDelete', null, global);
goog.exportSymbol('proto.v1.Update.updateChatPartipiants', null, global);
goog.exportSymbol('proto.v1.Update.updateHistoryClean', null, global);
goog.exportSymbol('proto.v1.Update.updateMessageTranscriptionStatus', null, global);
goog.exportSymbol('proto.v1.Update.updateMessageTranscriptionStatus.Status', null, global);
goog.exportSymbol('proto.v1.Update.updateNewMessage', null, global);
goog.exportSymbol('proto.v1.Update.updateRTC', null, global);
goog.exportSymbol('proto.v1.Update.updateRTC.Description', null, global);
goog.exportSymbol('proto.v1.Update.updateReadHistory', null, global);
goog.exportSymbol('proto.v1.Update.updateUserAdd', null, global);
goog.exportSymbol('proto.v1.Update.updateUserDelete', null, global);
goog.exportSymbol('proto.v1.Update.updateUserDelete.Reason', null, global);
goog.exportSymbol('proto.v1.UpdatesContainer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.UpdatesContainer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.UpdatesContainer.repeatedFields_, null);
};
goog.inherits(proto.v1.UpdatesContainer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.UpdatesContainer.displayName = 'proto.v1.UpdatesContainer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.Update.oneofGroups_);
};
goog.inherits(proto.v1.Update, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.displayName = 'proto.v1.Update';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateAvatar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.Update.updateAvatar.oneofGroups_);
};
goog.inherits(proto.v1.Update.updateAvatar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateAvatar.displayName = 'proto.v1.Update.updateAvatar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateAvatar.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateAvatar.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateAvatar.User.displayName = 'proto.v1.Update.updateAvatar.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateAvatar.Company = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateAvatar.Company, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateAvatar.Company.displayName = 'proto.v1.Update.updateAvatar.Company';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.MessageUpdatedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.MessageUpdatedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.MessageUpdatedEvent.displayName = 'proto.v1.Update.MessageUpdatedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateNewMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.Update.updateNewMessage.repeatedFields_, null);
};
goog.inherits(proto.v1.Update.updateNewMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateNewMessage.displayName = 'proto.v1.Update.updateNewMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateChatCreated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateChatCreated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateChatCreated.displayName = 'proto.v1.Update.updateChatCreated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateChatPartipiants = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.Update.updateChatPartipiants.repeatedFields_, null);
};
goog.inherits(proto.v1.Update.updateChatPartipiants, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateChatPartipiants.displayName = 'proto.v1.Update.updateChatPartipiants';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateChatPartipiantAdd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateChatPartipiantAdd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateChatPartipiantAdd.displayName = 'proto.v1.Update.updateChatPartipiantAdd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateChatPartipiantDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateChatPartipiantDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateChatPartipiantDelete.displayName = 'proto.v1.Update.updateChatPartipiantDelete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateChatNameChanged = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateChatNameChanged, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateChatNameChanged.displayName = 'proto.v1.Update.updateChatNameChanged';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateUserAdd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateUserAdd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateUserAdd.displayName = 'proto.v1.Update.updateUserAdd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateUserDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateUserDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateUserDelete.displayName = 'proto.v1.Update.updateUserDelete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateReadHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateReadHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateReadHistory.displayName = 'proto.v1.Update.updateReadHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.UserAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.Update.UserAction.oneofGroups_);
};
goog.inherits(proto.v1.Update.UserAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.UserAction.displayName = 'proto.v1.Update.UserAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.UserStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.v1.Update.UserStatus.oneofGroups_);
};
goog.inherits(proto.v1.Update.UserStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.UserStatus.displayName = 'proto.v1.Update.UserStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.CompanyCounter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.CompanyCounter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.CompanyCounter.displayName = 'proto.v1.Update.CompanyCounter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.UpdateNotifySettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.UpdateNotifySettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.UpdateNotifySettings.displayName = 'proto.v1.Update.UpdateNotifySettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateHistoryClean = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateHistoryClean, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateHistoryClean.displayName = 'proto.v1.Update.updateHistoryClean';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.MessageDeliveryStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.MessageDeliveryStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.MessageDeliveryStatus.displayName = 'proto.v1.Update.MessageDeliveryStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateMessageTranscriptionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateMessageTranscriptionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateMessageTranscriptionStatus.displayName = 'proto.v1.Update.updateMessageTranscriptionStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateRTC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateRTC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateRTC.displayName = 'proto.v1.Update.updateRTC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateRTC.Description = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateRTC.Description, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateRTC.Description.displayName = 'proto.v1.Update.updateRTC.Description';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.Update.updateCallEnded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.Update.updateCallEnded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.Update.updateCallEnded.displayName = 'proto.v1.Update.updateCallEnded';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.UpdatesContainer.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.UpdatesContainer.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.UpdatesContainer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.UpdatesContainer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.UpdatesContainer.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    proto.v1.Update.toObject, includeInstance),
    pts: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.UpdatesContainer}
 */
proto.v1.UpdatesContainer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.UpdatesContainer;
  return proto.v1.UpdatesContainer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.UpdatesContainer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.UpdatesContainer}
 */
proto.v1.UpdatesContainer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.Update;
      reader.readMessage(value,proto.v1.Update.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.UpdatesContainer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.UpdatesContainer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.UpdatesContainer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.UpdatesContainer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.v1.Update.serializeBinaryToWriter
    );
  }
  f = message.getPts();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated Update updates = 1;
 * @return {!Array<!proto.v1.Update>}
 */
proto.v1.UpdatesContainer.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.v1.Update>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.Update, 1));
};


/**
 * @param {!Array<!proto.v1.Update>} value
 * @return {!proto.v1.UpdatesContainer} returns this
*/
proto.v1.UpdatesContainer.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v1.Update=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.Update}
 */
proto.v1.UpdatesContainer.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v1.Update, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.UpdatesContainer} returns this
 */
proto.v1.UpdatesContainer.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};


/**
 * optional uint64 pts = 2;
 * @return {number}
 */
proto.v1.UpdatesContainer.prototype.getPts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.UpdatesContainer} returns this
 */
proto.v1.UpdatesContainer.prototype.setPts = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.Update.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]];

/**
 * @enum {number}
 */
proto.v1.Update.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  NEW_MESSAGE: 2,
  CHAT_CREATED: 3,
  CHAT_PARTIPIANTS: 4,
  CHAT_PARTIPIANT_ADD: 5,
  CHAT_PARTIPIANT_DELETE: 6,
  USER_ADD: 7,
  USER_DELETE: 8,
  READ_HISTORY: 9,
  CHAT_NAME_CHANGED: 10,
  UPDATE_USER_ACTION: 11,
  UPDATE_USER_STATUS: 12,
  UPDATE_COMPANY_COUNTER: 13,
  UPDATE_NOTIFICATION_SETTINGS: 14,
  MESSAGE_UPDATED: 15,
  UPDATE_PINNED_DIALOGS: 16,
  MESSAGES_DELIVERY_STATUS_CHANGED: 17,
  TEAMMATE_CHANGED: 18,
  MESSAGE_TRANSCRIPTION_STATUS_CHANGED: 19,
  UPDATE_COMPANY: 20,
  TAB_CHANGED: 21,
  PUSH: 22,
  AVATAR_CHANGED: 23,
  HISTORY_CLEAN: 24,
  ACCOUNT_LIMITS_LEFT: 25,
  ORDER_UPDATED: 26,
  TAB_REMOVED: 27,
  APPLICATIONS_CHANGED: 28,
  RPA_REQUEST_CHANGED: 29,
  CALL_INCOMING: 30,
  CALL_ENDED: 31
};

/**
 * @return {proto.v1.Update.PayloadCase}
 */
proto.v1.Update.prototype.getPayloadCase = function() {
  return /** @type {proto.v1.Update.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.v1.Update.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.toObject = function(includeInstance, msg) {
  var f, obj = {
    pts: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newMessage: (f = msg.getNewMessage()) && proto.v1.Update.updateNewMessage.toObject(includeInstance, f),
    chatCreated: (f = msg.getChatCreated()) && proto.v1.Update.updateChatCreated.toObject(includeInstance, f),
    chatPartipiants: (f = msg.getChatPartipiants()) && proto.v1.Update.updateChatPartipiants.toObject(includeInstance, f),
    chatPartipiantAdd: (f = msg.getChatPartipiantAdd()) && proto.v1.Update.updateChatPartipiantAdd.toObject(includeInstance, f),
    chatPartipiantDelete: (f = msg.getChatPartipiantDelete()) && proto.v1.Update.updateChatPartipiantDelete.toObject(includeInstance, f),
    userAdd: (f = msg.getUserAdd()) && proto.v1.Update.updateUserAdd.toObject(includeInstance, f),
    userDelete: (f = msg.getUserDelete()) && proto.v1.Update.updateUserDelete.toObject(includeInstance, f),
    readHistory: (f = msg.getReadHistory()) && proto.v1.Update.updateReadHistory.toObject(includeInstance, f),
    chatNameChanged: (f = msg.getChatNameChanged()) && proto.v1.Update.updateChatNameChanged.toObject(includeInstance, f),
    updateUserAction: (f = msg.getUpdateUserAction()) && proto.v1.Update.UserAction.toObject(includeInstance, f),
    updateUserStatus: (f = msg.getUpdateUserStatus()) && proto.v1.Update.UserStatus.toObject(includeInstance, f),
    updateCompanyCounter: (f = msg.getUpdateCompanyCounter()) && proto.v1.Update.CompanyCounter.toObject(includeInstance, f),
    updateNotificationSettings: (f = msg.getUpdateNotificationSettings()) && proto.v1.Update.UpdateNotifySettings.toObject(includeInstance, f),
    messageUpdated: (f = msg.getMessageUpdated()) && proto.v1.Update.MessageUpdatedEvent.toObject(includeInstance, f),
    updatePinnedDialogs: (f = msg.getUpdatePinnedDialogs()) && layer1_messages_pb.Messages.PinnedDialogsOrder.toObject(includeInstance, f),
    messagesDeliveryStatusChanged: (f = msg.getMessagesDeliveryStatusChanged()) && proto.v1.Update.MessageDeliveryStatus.toObject(includeInstance, f),
    teammateChanged: (f = msg.getTeammateChanged()) && layer1_users_pb.Users.User.toObject(includeInstance, f),
    messageTranscriptionStatusChanged: (f = msg.getMessageTranscriptionStatusChanged()) && proto.v1.Update.updateMessageTranscriptionStatus.toObject(includeInstance, f),
    updateCompany: (f = msg.getUpdateCompany()) && layer1_users_pb.Users.Account.toObject(includeInstance, f),
    tabChanged: (f = msg.getTabChanged()) && layer1_account_pb.Account.Tab.toObject(includeInstance, f),
    push: (f = msg.getPush()) && layer1_messages_pb.Messages.Push.toObject(includeInstance, f),
    avatarChanged: (f = msg.getAvatarChanged()) && proto.v1.Update.updateAvatar.toObject(includeInstance, f),
    historyClean: (f = msg.getHistoryClean()) && proto.v1.Update.updateHistoryClean.toObject(includeInstance, f),
    accountLimitsLeft: (f = msg.getAccountLimitsLeft()) && layer1_billing_pb.Billing.AccountLimitsLeft.toObject(includeInstance, f),
    orderUpdated: (f = msg.getOrderUpdated()) && layer1_billing_pb.Billing.Order.toObject(includeInstance, f),
    tabRemoved: (f = msg.getTabRemoved()) && layer1_account_pb.Account.Tab.toObject(includeInstance, f),
    applicationsChanged: (f = msg.getApplicationsChanged()) && layer1_account_pb.Account.Applications.toObject(includeInstance, f),
    rpaRequestChanged: (f = msg.getRpaRequestChanged()) && layer1_rpa_v1_rpa_v1_updates_pb.RequestChangedUpdate.toObject(includeInstance, f),
    callIncoming: (f = msg.getCallIncoming()) && proto.v1.Update.updateRTC.toObject(includeInstance, f),
    callEnded: (f = msg.getCallEnded()) && proto.v1.Update.updateCallEnded.toObject(includeInstance, f),
    serverTime: jspb.Message.getFieldWithDefault(msg, 200, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update}
 */
proto.v1.Update.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update;
  return proto.v1.Update.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update}
 */
proto.v1.Update.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPts(value);
      break;
    case 2:
      var value = new proto.v1.Update.updateNewMessage;
      reader.readMessage(value,proto.v1.Update.updateNewMessage.deserializeBinaryFromReader);
      msg.setNewMessage(value);
      break;
    case 3:
      var value = new proto.v1.Update.updateChatCreated;
      reader.readMessage(value,proto.v1.Update.updateChatCreated.deserializeBinaryFromReader);
      msg.setChatCreated(value);
      break;
    case 4:
      var value = new proto.v1.Update.updateChatPartipiants;
      reader.readMessage(value,proto.v1.Update.updateChatPartipiants.deserializeBinaryFromReader);
      msg.setChatPartipiants(value);
      break;
    case 5:
      var value = new proto.v1.Update.updateChatPartipiantAdd;
      reader.readMessage(value,proto.v1.Update.updateChatPartipiantAdd.deserializeBinaryFromReader);
      msg.setChatPartipiantAdd(value);
      break;
    case 6:
      var value = new proto.v1.Update.updateChatPartipiantDelete;
      reader.readMessage(value,proto.v1.Update.updateChatPartipiantDelete.deserializeBinaryFromReader);
      msg.setChatPartipiantDelete(value);
      break;
    case 7:
      var value = new proto.v1.Update.updateUserAdd;
      reader.readMessage(value,proto.v1.Update.updateUserAdd.deserializeBinaryFromReader);
      msg.setUserAdd(value);
      break;
    case 8:
      var value = new proto.v1.Update.updateUserDelete;
      reader.readMessage(value,proto.v1.Update.updateUserDelete.deserializeBinaryFromReader);
      msg.setUserDelete(value);
      break;
    case 9:
      var value = new proto.v1.Update.updateReadHistory;
      reader.readMessage(value,proto.v1.Update.updateReadHistory.deserializeBinaryFromReader);
      msg.setReadHistory(value);
      break;
    case 10:
      var value = new proto.v1.Update.updateChatNameChanged;
      reader.readMessage(value,proto.v1.Update.updateChatNameChanged.deserializeBinaryFromReader);
      msg.setChatNameChanged(value);
      break;
    case 11:
      var value = new proto.v1.Update.UserAction;
      reader.readMessage(value,proto.v1.Update.UserAction.deserializeBinaryFromReader);
      msg.setUpdateUserAction(value);
      break;
    case 12:
      var value = new proto.v1.Update.UserStatus;
      reader.readMessage(value,proto.v1.Update.UserStatus.deserializeBinaryFromReader);
      msg.setUpdateUserStatus(value);
      break;
    case 13:
      var value = new proto.v1.Update.CompanyCounter;
      reader.readMessage(value,proto.v1.Update.CompanyCounter.deserializeBinaryFromReader);
      msg.setUpdateCompanyCounter(value);
      break;
    case 14:
      var value = new proto.v1.Update.UpdateNotifySettings;
      reader.readMessage(value,proto.v1.Update.UpdateNotifySettings.deserializeBinaryFromReader);
      msg.setUpdateNotificationSettings(value);
      break;
    case 15:
      var value = new proto.v1.Update.MessageUpdatedEvent;
      reader.readMessage(value,proto.v1.Update.MessageUpdatedEvent.deserializeBinaryFromReader);
      msg.setMessageUpdated(value);
      break;
    case 16:
      var value = new layer1_messages_pb.Messages.PinnedDialogsOrder;
      reader.readMessage(value,layer1_messages_pb.Messages.PinnedDialogsOrder.deserializeBinaryFromReader);
      msg.setUpdatePinnedDialogs(value);
      break;
    case 17:
      var value = new proto.v1.Update.MessageDeliveryStatus;
      reader.readMessage(value,proto.v1.Update.MessageDeliveryStatus.deserializeBinaryFromReader);
      msg.setMessagesDeliveryStatusChanged(value);
      break;
    case 18:
      var value = new layer1_users_pb.Users.User;
      reader.readMessage(value,layer1_users_pb.Users.User.deserializeBinaryFromReader);
      msg.setTeammateChanged(value);
      break;
    case 19:
      var value = new proto.v1.Update.updateMessageTranscriptionStatus;
      reader.readMessage(value,proto.v1.Update.updateMessageTranscriptionStatus.deserializeBinaryFromReader);
      msg.setMessageTranscriptionStatusChanged(value);
      break;
    case 20:
      var value = new layer1_users_pb.Users.Account;
      reader.readMessage(value,layer1_users_pb.Users.Account.deserializeBinaryFromReader);
      msg.setUpdateCompany(value);
      break;
    case 21:
      var value = new layer1_account_pb.Account.Tab;
      reader.readMessage(value,layer1_account_pb.Account.Tab.deserializeBinaryFromReader);
      msg.setTabChanged(value);
      break;
    case 22:
      var value = new layer1_messages_pb.Messages.Push;
      reader.readMessage(value,layer1_messages_pb.Messages.Push.deserializeBinaryFromReader);
      msg.setPush(value);
      break;
    case 23:
      var value = new proto.v1.Update.updateAvatar;
      reader.readMessage(value,proto.v1.Update.updateAvatar.deserializeBinaryFromReader);
      msg.setAvatarChanged(value);
      break;
    case 24:
      var value = new proto.v1.Update.updateHistoryClean;
      reader.readMessage(value,proto.v1.Update.updateHistoryClean.deserializeBinaryFromReader);
      msg.setHistoryClean(value);
      break;
    case 25:
      var value = new layer1_billing_pb.Billing.AccountLimitsLeft;
      reader.readMessage(value,layer1_billing_pb.Billing.AccountLimitsLeft.deserializeBinaryFromReader);
      msg.setAccountLimitsLeft(value);
      break;
    case 26:
      var value = new layer1_billing_pb.Billing.Order;
      reader.readMessage(value,layer1_billing_pb.Billing.Order.deserializeBinaryFromReader);
      msg.setOrderUpdated(value);
      break;
    case 27:
      var value = new layer1_account_pb.Account.Tab;
      reader.readMessage(value,layer1_account_pb.Account.Tab.deserializeBinaryFromReader);
      msg.setTabRemoved(value);
      break;
    case 28:
      var value = new layer1_account_pb.Account.Applications;
      reader.readMessage(value,layer1_account_pb.Account.Applications.deserializeBinaryFromReader);
      msg.setApplicationsChanged(value);
      break;
    case 29:
      var value = new layer1_rpa_v1_rpa_v1_updates_pb.RequestChangedUpdate;
      reader.readMessage(value,layer1_rpa_v1_rpa_v1_updates_pb.RequestChangedUpdate.deserializeBinaryFromReader);
      msg.setRpaRequestChanged(value);
      break;
    case 30:
      var value = new proto.v1.Update.updateRTC;
      reader.readMessage(value,proto.v1.Update.updateRTC.deserializeBinaryFromReader);
      msg.setCallIncoming(value);
      break;
    case 31:
      var value = new proto.v1.Update.updateCallEnded;
      reader.readMessage(value,proto.v1.Update.updateCallEnded.deserializeBinaryFromReader);
      msg.setCallEnded(value);
      break;
    case 200:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setServerTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPts();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNewMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.v1.Update.updateNewMessage.serializeBinaryToWriter
    );
  }
  f = message.getChatCreated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.v1.Update.updateChatCreated.serializeBinaryToWriter
    );
  }
  f = message.getChatPartipiants();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.v1.Update.updateChatPartipiants.serializeBinaryToWriter
    );
  }
  f = message.getChatPartipiantAdd();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.v1.Update.updateChatPartipiantAdd.serializeBinaryToWriter
    );
  }
  f = message.getChatPartipiantDelete();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.v1.Update.updateChatPartipiantDelete.serializeBinaryToWriter
    );
  }
  f = message.getUserAdd();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.v1.Update.updateUserAdd.serializeBinaryToWriter
    );
  }
  f = message.getUserDelete();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.v1.Update.updateUserDelete.serializeBinaryToWriter
    );
  }
  f = message.getReadHistory();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.v1.Update.updateReadHistory.serializeBinaryToWriter
    );
  }
  f = message.getChatNameChanged();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.v1.Update.updateChatNameChanged.serializeBinaryToWriter
    );
  }
  f = message.getUpdateUserAction();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.v1.Update.UserAction.serializeBinaryToWriter
    );
  }
  f = message.getUpdateUserStatus();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.v1.Update.UserStatus.serializeBinaryToWriter
    );
  }
  f = message.getUpdateCompanyCounter();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.v1.Update.CompanyCounter.serializeBinaryToWriter
    );
  }
  f = message.getUpdateNotificationSettings();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.v1.Update.UpdateNotifySettings.serializeBinaryToWriter
    );
  }
  f = message.getMessageUpdated();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.v1.Update.MessageUpdatedEvent.serializeBinaryToWriter
    );
  }
  f = message.getUpdatePinnedDialogs();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      layer1_messages_pb.Messages.PinnedDialogsOrder.serializeBinaryToWriter
    );
  }
  f = message.getMessagesDeliveryStatusChanged();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.v1.Update.MessageDeliveryStatus.serializeBinaryToWriter
    );
  }
  f = message.getTeammateChanged();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      layer1_users_pb.Users.User.serializeBinaryToWriter
    );
  }
  f = message.getMessageTranscriptionStatusChanged();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.v1.Update.updateMessageTranscriptionStatus.serializeBinaryToWriter
    );
  }
  f = message.getUpdateCompany();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      layer1_users_pb.Users.Account.serializeBinaryToWriter
    );
  }
  f = message.getTabChanged();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      layer1_account_pb.Account.Tab.serializeBinaryToWriter
    );
  }
  f = message.getPush();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      layer1_messages_pb.Messages.Push.serializeBinaryToWriter
    );
  }
  f = message.getAvatarChanged();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.v1.Update.updateAvatar.serializeBinaryToWriter
    );
  }
  f = message.getHistoryClean();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.v1.Update.updateHistoryClean.serializeBinaryToWriter
    );
  }
  f = message.getAccountLimitsLeft();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      layer1_billing_pb.Billing.AccountLimitsLeft.serializeBinaryToWriter
    );
  }
  f = message.getOrderUpdated();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      layer1_billing_pb.Billing.Order.serializeBinaryToWriter
    );
  }
  f = message.getTabRemoved();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      layer1_account_pb.Account.Tab.serializeBinaryToWriter
    );
  }
  f = message.getApplicationsChanged();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      layer1_account_pb.Account.Applications.serializeBinaryToWriter
    );
  }
  f = message.getRpaRequestChanged();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      layer1_rpa_v1_rpa_v1_updates_pb.RequestChangedUpdate.serializeBinaryToWriter
    );
  }
  f = message.getCallIncoming();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.v1.Update.updateRTC.serializeBinaryToWriter
    );
  }
  f = message.getCallEnded();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.v1.Update.updateCallEnded.serializeBinaryToWriter
    );
  }
  f = message.getServerTime();
  if (f !== 0) {
    writer.writeUint64(
      200,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.Update.updateAvatar.oneofGroups_ = [[10,11,12]];

/**
 * @enum {number}
 */
proto.v1.Update.updateAvatar.AvatarCase = {
  AVATAR_NOT_SET: 0,
  AVATAR_USER: 10,
  AVATAR_COMPANY: 11,
  AVATAR_CHAT: 12
};

/**
 * @return {proto.v1.Update.updateAvatar.AvatarCase}
 */
proto.v1.Update.updateAvatar.prototype.getAvatarCase = function() {
  return /** @type {proto.v1.Update.updateAvatar.AvatarCase} */(jspb.Message.computeOneofCase(this, proto.v1.Update.updateAvatar.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateAvatar.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateAvatar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateAvatar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateAvatar.toObject = function(includeInstance, msg) {
  var f, obj = {
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    avatarFile: (f = msg.getAvatarFile()) && layer1_common_pb.MediaPhoto.toObject(includeInstance, f),
    avatarUser: (f = msg.getAvatarUser()) && proto.v1.Update.updateAvatar.User.toObject(includeInstance, f),
    avatarCompany: (f = msg.getAvatarCompany()) && proto.v1.Update.updateAvatar.Company.toObject(includeInstance, f),
    avatarChat: (f = msg.getAvatarChat()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateAvatar}
 */
proto.v1.Update.updateAvatar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateAvatar;
  return proto.v1.Update.updateAvatar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateAvatar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateAvatar}
 */
proto.v1.Update.updateAvatar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 2:
      var value = new layer1_common_pb.MediaPhoto;
      reader.readMessage(value,layer1_common_pb.MediaPhoto.deserializeBinaryFromReader);
      msg.setAvatarFile(value);
      break;
    case 10:
      var value = new proto.v1.Update.updateAvatar.User;
      reader.readMessage(value,proto.v1.Update.updateAvatar.User.deserializeBinaryFromReader);
      msg.setAvatarUser(value);
      break;
    case 11:
      var value = new proto.v1.Update.updateAvatar.Company;
      reader.readMessage(value,proto.v1.Update.updateAvatar.Company.deserializeBinaryFromReader);
      msg.setAvatarCompany(value);
      break;
    case 12:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setAvatarChat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateAvatar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateAvatar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateAvatar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateAvatar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvatarFile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_common_pb.MediaPhoto.serializeBinaryToWriter
    );
  }
  f = message.getAvatarUser();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.v1.Update.updateAvatar.User.serializeBinaryToWriter
    );
  }
  f = message.getAvatarCompany();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.v1.Update.updateAvatar.Company.serializeBinaryToWriter
    );
  }
  f = message.getAvatarChat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateAvatar.User.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateAvatar.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateAvatar.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateAvatar.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateAvatar.User}
 */
proto.v1.Update.updateAvatar.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateAvatar.User;
  return proto.v1.Update.updateAvatar.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateAvatar.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateAvatar.User}
 */
proto.v1.Update.updateAvatar.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateAvatar.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateAvatar.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateAvatar.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateAvatar.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.v1.Update.updateAvatar.User.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateAvatar.User} returns this
 */
proto.v1.Update.updateAvatar.User.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateAvatar.Company.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateAvatar.Company.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateAvatar.Company} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateAvatar.Company.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateAvatar.Company}
 */
proto.v1.Update.updateAvatar.Company.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateAvatar.Company;
  return proto.v1.Update.updateAvatar.Company.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateAvatar.Company} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateAvatar.Company}
 */
proto.v1.Update.updateAvatar.Company.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateAvatar.Company.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateAvatar.Company.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateAvatar.Company} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateAvatar.Company.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.v1.Update.updateAvatar.Company.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateAvatar.Company} returns this
 */
proto.v1.Update.updateAvatar.Company.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string avatar_url = 1;
 * @return {string}
 */
proto.v1.Update.updateAvatar.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateAvatar} returns this
 */
proto.v1.Update.updateAvatar.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MediaPhoto avatar_file = 2;
 * @return {?proto.v1.MediaPhoto}
 */
proto.v1.Update.updateAvatar.prototype.getAvatarFile = function() {
  return /** @type{?proto.v1.MediaPhoto} */ (
    jspb.Message.getWrapperField(this, layer1_common_pb.MediaPhoto, 2));
};


/**
 * @param {?proto.v1.MediaPhoto|undefined} value
 * @return {!proto.v1.Update.updateAvatar} returns this
*/
proto.v1.Update.updateAvatar.prototype.setAvatarFile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateAvatar} returns this
 */
proto.v1.Update.updateAvatar.prototype.clearAvatarFile = function() {
  return this.setAvatarFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateAvatar.prototype.hasAvatarFile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User avatar_user = 10;
 * @return {?proto.v1.Update.updateAvatar.User}
 */
proto.v1.Update.updateAvatar.prototype.getAvatarUser = function() {
  return /** @type{?proto.v1.Update.updateAvatar.User} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateAvatar.User, 10));
};


/**
 * @param {?proto.v1.Update.updateAvatar.User|undefined} value
 * @return {!proto.v1.Update.updateAvatar} returns this
*/
proto.v1.Update.updateAvatar.prototype.setAvatarUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.v1.Update.updateAvatar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateAvatar} returns this
 */
proto.v1.Update.updateAvatar.prototype.clearAvatarUser = function() {
  return this.setAvatarUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateAvatar.prototype.hasAvatarUser = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Company avatar_company = 11;
 * @return {?proto.v1.Update.updateAvatar.Company}
 */
proto.v1.Update.updateAvatar.prototype.getAvatarCompany = function() {
  return /** @type{?proto.v1.Update.updateAvatar.Company} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateAvatar.Company, 11));
};


/**
 * @param {?proto.v1.Update.updateAvatar.Company|undefined} value
 * @return {!proto.v1.Update.updateAvatar} returns this
*/
proto.v1.Update.updateAvatar.prototype.setAvatarCompany = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.v1.Update.updateAvatar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateAvatar} returns this
 */
proto.v1.Update.updateAvatar.prototype.clearAvatarCompany = function() {
  return this.setAvatarCompany(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateAvatar.prototype.hasAvatarCompany = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Messages.Peer avatar_chat = 12;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.updateAvatar.prototype.getAvatarChat = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 12));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.updateAvatar} returns this
*/
proto.v1.Update.updateAvatar.prototype.setAvatarChat = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.v1.Update.updateAvatar.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateAvatar} returns this
 */
proto.v1.Update.updateAvatar.prototype.clearAvatarChat = function() {
  return this.setAvatarChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateAvatar.prototype.hasAvatarChat = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.MessageUpdatedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.MessageUpdatedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.MessageUpdatedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.MessageUpdatedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && layer1_messages_pb.Messages.Message.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.MessageUpdatedEvent}
 */
proto.v1.Update.MessageUpdatedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.MessageUpdatedEvent;
  return proto.v1.Update.MessageUpdatedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.MessageUpdatedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.MessageUpdatedEvent}
 */
proto.v1.Update.MessageUpdatedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_messages_pb.Messages.Message;
      reader.readMessage(value,layer1_messages_pb.Messages.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.MessageUpdatedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.MessageUpdatedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.MessageUpdatedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.MessageUpdatedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_messages_pb.Messages.Message.serializeBinaryToWriter
    );
  }
};


/**
 * optional Messages.Message message = 1;
 * @return {?proto.v1.Messages.Message}
 */
proto.v1.Update.MessageUpdatedEvent.prototype.getMessage = function() {
  return /** @type{?proto.v1.Messages.Message} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Message, 1));
};


/**
 * @param {?proto.v1.Messages.Message|undefined} value
 * @return {!proto.v1.Update.MessageUpdatedEvent} returns this
*/
proto.v1.Update.MessageUpdatedEvent.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.MessageUpdatedEvent} returns this
 */
proto.v1.Update.MessageUpdatedEvent.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.MessageUpdatedEvent.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.Update.updateNewMessage.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateNewMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateNewMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateNewMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateNewMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && layer1_messages_pb.Messages.Message.toObject(includeInstance, f),
    updateConversation: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    silent: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    layer1_users_pb.Users.CommonUser.toObject, includeInstance),
    chatsList: jspb.Message.toObjectList(msg.getChatsList(),
    layer1_messages_pb.Messages.Chat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateNewMessage}
 */
proto.v1.Update.updateNewMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateNewMessage;
  return proto.v1.Update.updateNewMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateNewMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateNewMessage}
 */
proto.v1.Update.updateNewMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new layer1_messages_pb.Messages.Message;
      reader.readMessage(value,layer1_messages_pb.Messages.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateConversation(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSilent(value);
      break;
    case 5:
      var value = new layer1_users_pb.Users.CommonUser;
      reader.readMessage(value,layer1_users_pb.Users.CommonUser.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 6:
      var value = new layer1_messages_pb.Messages.Chat;
      reader.readMessage(value,layer1_messages_pb.Messages.Chat.deserializeBinaryFromReader);
      msg.addChats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateNewMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateNewMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateNewMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateNewMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.Message.serializeBinaryToWriter
    );
  }
  f = message.getUpdateConversation();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSilent();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      layer1_users_pb.Users.CommonUser.serializeBinaryToWriter
    );
  }
  f = message.getChatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      layer1_messages_pb.Messages.Chat.serializeBinaryToWriter
    );
  }
};


/**
 * optional Messages.Message message = 2;
 * @return {?proto.v1.Messages.Message}
 */
proto.v1.Update.updateNewMessage.prototype.getMessage = function() {
  return /** @type{?proto.v1.Messages.Message} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Message, 2));
};


/**
 * @param {?proto.v1.Messages.Message|undefined} value
 * @return {!proto.v1.Update.updateNewMessage} returns this
*/
proto.v1.Update.updateNewMessage.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateNewMessage} returns this
 */
proto.v1.Update.updateNewMessage.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateNewMessage.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool update_conversation = 3;
 * @return {boolean}
 */
proto.v1.Update.updateNewMessage.prototype.getUpdateConversation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.Update.updateNewMessage} returns this
 */
proto.v1.Update.updateNewMessage.prototype.setUpdateConversation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool silent = 4;
 * @return {boolean}
 */
proto.v1.Update.updateNewMessage.prototype.getSilent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.Update.updateNewMessage} returns this
 */
proto.v1.Update.updateNewMessage.prototype.setSilent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated Users.CommonUser users = 5;
 * @return {!Array<!proto.v1.Users.CommonUser>}
 */
proto.v1.Update.updateNewMessage.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.v1.Users.CommonUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, layer1_users_pb.Users.CommonUser, 5));
};


/**
 * @param {!Array<!proto.v1.Users.CommonUser>} value
 * @return {!proto.v1.Update.updateNewMessage} returns this
*/
proto.v1.Update.updateNewMessage.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.v1.Users.CommonUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.Users.CommonUser}
 */
proto.v1.Update.updateNewMessage.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.v1.Users.CommonUser, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.Update.updateNewMessage} returns this
 */
proto.v1.Update.updateNewMessage.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated Messages.Chat chats = 6;
 * @return {!Array<!proto.v1.Messages.Chat>}
 */
proto.v1.Update.updateNewMessage.prototype.getChatsList = function() {
  return /** @type{!Array<!proto.v1.Messages.Chat>} */ (
    jspb.Message.getRepeatedWrapperField(this, layer1_messages_pb.Messages.Chat, 6));
};


/**
 * @param {!Array<!proto.v1.Messages.Chat>} value
 * @return {!proto.v1.Update.updateNewMessage} returns this
*/
proto.v1.Update.updateNewMessage.prototype.setChatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.v1.Messages.Chat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.Messages.Chat}
 */
proto.v1.Update.updateNewMessage.prototype.addChats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.v1.Messages.Chat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.Update.updateNewMessage} returns this
 */
proto.v1.Update.updateNewMessage.prototype.clearChatsList = function() {
  return this.setChatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateChatCreated.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateChatCreated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateChatCreated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatCreated.toObject = function(includeInstance, msg) {
  var f, obj = {
    chat: (f = msg.getChat()) && layer1_messages_pb.Messages.Chat.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateChatCreated}
 */
proto.v1.Update.updateChatCreated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateChatCreated;
  return proto.v1.Update.updateChatCreated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateChatCreated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateChatCreated}
 */
proto.v1.Update.updateChatCreated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_messages_pb.Messages.Chat;
      reader.readMessage(value,layer1_messages_pb.Messages.Chat.deserializeBinaryFromReader);
      msg.setChat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateChatCreated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateChatCreated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateChatCreated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatCreated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_messages_pb.Messages.Chat.serializeBinaryToWriter
    );
  }
};


/**
 * optional Messages.Chat chat = 1;
 * @return {?proto.v1.Messages.Chat}
 */
proto.v1.Update.updateChatCreated.prototype.getChat = function() {
  return /** @type{?proto.v1.Messages.Chat} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Chat, 1));
};


/**
 * @param {?proto.v1.Messages.Chat|undefined} value
 * @return {!proto.v1.Update.updateChatCreated} returns this
*/
proto.v1.Update.updateChatCreated.prototype.setChat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatCreated} returns this
 */
proto.v1.Update.updateChatCreated.prototype.clearChat = function() {
  return this.setChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatCreated.prototype.hasChat = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.Update.updateChatPartipiants.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateChatPartipiants.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateChatPartipiants.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateChatPartipiants} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatPartipiants.toObject = function(includeInstance, msg) {
  var f, obj = {
    chatId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    layer1_messages_pb.Messages.InputMember.toObject, includeInstance),
    chat: (f = msg.getChat()) && layer1_messages_pb.Messages.InputChat.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateChatPartipiants}
 */
proto.v1.Update.updateChatPartipiants.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateChatPartipiants;
  return proto.v1.Update.updateChatPartipiants.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateChatPartipiants} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateChatPartipiants}
 */
proto.v1.Update.updateChatPartipiants.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChatId(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.InputMember;
      reader.readMessage(value,layer1_messages_pb.Messages.InputMember.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 3:
      var value = new layer1_messages_pb.Messages.InputChat;
      reader.readMessage(value,layer1_messages_pb.Messages.InputChat.deserializeBinaryFromReader);
      msg.setChat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateChatPartipiants.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateChatPartipiants.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateChatPartipiants} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatPartipiants.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChatId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      layer1_messages_pb.Messages.InputMember.serializeBinaryToWriter
    );
  }
  f = message.getChat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      layer1_messages_pb.Messages.InputChat.serializeBinaryToWriter
    );
  }
};


/**
 * optional string chat_id = 1;
 * @return {string}
 */
proto.v1.Update.updateChatPartipiants.prototype.getChatId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateChatPartipiants} returns this
 */
proto.v1.Update.updateChatPartipiants.prototype.setChatId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Messages.InputMember users = 2;
 * @return {!Array<!proto.v1.Messages.InputMember>}
 */
proto.v1.Update.updateChatPartipiants.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.v1.Messages.InputMember>} */ (
    jspb.Message.getRepeatedWrapperField(this, layer1_messages_pb.Messages.InputMember, 2));
};


/**
 * @param {!Array<!proto.v1.Messages.InputMember>} value
 * @return {!proto.v1.Update.updateChatPartipiants} returns this
*/
proto.v1.Update.updateChatPartipiants.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.v1.Messages.InputMember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.Messages.InputMember}
 */
proto.v1.Update.updateChatPartipiants.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.v1.Messages.InputMember, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.Update.updateChatPartipiants} returns this
 */
proto.v1.Update.updateChatPartipiants.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional Messages.InputChat chat = 3;
 * @return {?proto.v1.Messages.InputChat}
 */
proto.v1.Update.updateChatPartipiants.prototype.getChat = function() {
  return /** @type{?proto.v1.Messages.InputChat} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.InputChat, 3));
};


/**
 * @param {?proto.v1.Messages.InputChat|undefined} value
 * @return {!proto.v1.Update.updateChatPartipiants} returns this
*/
proto.v1.Update.updateChatPartipiants.prototype.setChat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatPartipiants} returns this
 */
proto.v1.Update.updateChatPartipiants.prototype.clearChat = function() {
  return this.setChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatPartipiants.prototype.hasChat = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateChatPartipiantAdd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateChatPartipiantAdd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatPartipiantAdd.toObject = function(includeInstance, msg) {
  var f, obj = {
    chatId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: (f = msg.getUser()) && layer1_messages_pb.Messages.InputMember.toObject(includeInstance, f),
    inviterId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    chat: (f = msg.getChat()) && layer1_messages_pb.Messages.InputChat.toObject(includeInstance, f),
    chatDetail: (f = msg.getChatDetail()) && layer1_messages_pb.Messages.Chat.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateChatPartipiantAdd}
 */
proto.v1.Update.updateChatPartipiantAdd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateChatPartipiantAdd;
  return proto.v1.Update.updateChatPartipiantAdd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateChatPartipiantAdd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateChatPartipiantAdd}
 */
proto.v1.Update.updateChatPartipiantAdd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChatId(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.InputMember;
      reader.readMessage(value,layer1_messages_pb.Messages.InputMember.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInviterId(value);
      break;
    case 4:
      var value = new layer1_messages_pb.Messages.InputChat;
      reader.readMessage(value,layer1_messages_pb.Messages.InputChat.deserializeBinaryFromReader);
      msg.setChat(value);
      break;
    case 5:
      var value = new layer1_messages_pb.Messages.Chat;
      reader.readMessage(value,layer1_messages_pb.Messages.Chat.deserializeBinaryFromReader);
      msg.setChatDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateChatPartipiantAdd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateChatPartipiantAdd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatPartipiantAdd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChatId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.InputMember.serializeBinaryToWriter
    );
  }
  f = message.getInviterId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      layer1_messages_pb.Messages.InputChat.serializeBinaryToWriter
    );
  }
  f = message.getChatDetail();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      layer1_messages_pb.Messages.Chat.serializeBinaryToWriter
    );
  }
};


/**
 * optional string chat_id = 1;
 * @return {string}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.getChatId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.setChatId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages.InputMember user = 2;
 * @return {?proto.v1.Messages.InputMember}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.getUser = function() {
  return /** @type{?proto.v1.Messages.InputMember} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.InputMember, 2));
};


/**
 * @param {?proto.v1.Messages.InputMember|undefined} value
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
*/
proto.v1.Update.updateChatPartipiantAdd.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string inviter_id = 3;
 * @return {string}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.getInviterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.setInviterId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Messages.InputChat chat = 4;
 * @return {?proto.v1.Messages.InputChat}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.getChat = function() {
  return /** @type{?proto.v1.Messages.InputChat} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.InputChat, 4));
};


/**
 * @param {?proto.v1.Messages.InputChat|undefined} value
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
*/
proto.v1.Update.updateChatPartipiantAdd.prototype.setChat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.clearChat = function() {
  return this.setChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.hasChat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Messages.Chat chat_detail = 5;
 * @return {?proto.v1.Messages.Chat}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.getChatDetail = function() {
  return /** @type{?proto.v1.Messages.Chat} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Chat, 5));
};


/**
 * @param {?proto.v1.Messages.Chat|undefined} value
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
*/
proto.v1.Update.updateChatPartipiantAdd.prototype.setChatDetail = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatPartipiantAdd} returns this
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.clearChatDetail = function() {
  return this.setChatDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatPartipiantAdd.prototype.hasChatDetail = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateChatPartipiantDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateChatPartipiantDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatPartipiantDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    chatId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: (f = msg.getUser()) && layer1_messages_pb.Messages.InputMember.toObject(includeInstance, f),
    kickerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    chat: (f = msg.getChat()) && layer1_messages_pb.Messages.InputChat.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateChatPartipiantDelete}
 */
proto.v1.Update.updateChatPartipiantDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateChatPartipiantDelete;
  return proto.v1.Update.updateChatPartipiantDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateChatPartipiantDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateChatPartipiantDelete}
 */
proto.v1.Update.updateChatPartipiantDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChatId(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.InputMember;
      reader.readMessage(value,layer1_messages_pb.Messages.InputMember.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKickerId(value);
      break;
    case 4:
      var value = new layer1_messages_pb.Messages.InputChat;
      reader.readMessage(value,layer1_messages_pb.Messages.InputChat.deserializeBinaryFromReader);
      msg.setChat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateChatPartipiantDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateChatPartipiantDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatPartipiantDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChatId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.InputMember.serializeBinaryToWriter
    );
  }
  f = message.getKickerId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      layer1_messages_pb.Messages.InputChat.serializeBinaryToWriter
    );
  }
};


/**
 * optional string chat_id = 1;
 * @return {string}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.getChatId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateChatPartipiantDelete} returns this
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.setChatId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages.InputMember user = 2;
 * @return {?proto.v1.Messages.InputMember}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.getUser = function() {
  return /** @type{?proto.v1.Messages.InputMember} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.InputMember, 2));
};


/**
 * @param {?proto.v1.Messages.InputMember|undefined} value
 * @return {!proto.v1.Update.updateChatPartipiantDelete} returns this
*/
proto.v1.Update.updateChatPartipiantDelete.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatPartipiantDelete} returns this
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string kicker_id = 3;
 * @return {string}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.getKickerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateChatPartipiantDelete} returns this
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.setKickerId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Messages.InputChat chat = 4;
 * @return {?proto.v1.Messages.InputChat}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.getChat = function() {
  return /** @type{?proto.v1.Messages.InputChat} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.InputChat, 4));
};


/**
 * @param {?proto.v1.Messages.InputChat|undefined} value
 * @return {!proto.v1.Update.updateChatPartipiantDelete} returns this
*/
proto.v1.Update.updateChatPartipiantDelete.prototype.setChat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatPartipiantDelete} returns this
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.clearChat = function() {
  return this.setChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatPartipiantDelete.prototype.hasChat = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateChatNameChanged.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateChatNameChanged.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateChatNameChanged} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatNameChanged.toObject = function(includeInstance, msg) {
  var f, obj = {
    chat: (f = msg.getChat()) && layer1_messages_pb.Messages.InputChat.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateChatNameChanged}
 */
proto.v1.Update.updateChatNameChanged.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateChatNameChanged;
  return proto.v1.Update.updateChatNameChanged.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateChatNameChanged} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateChatNameChanged}
 */
proto.v1.Update.updateChatNameChanged.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_messages_pb.Messages.InputChat;
      reader.readMessage(value,layer1_messages_pb.Messages.InputChat.deserializeBinaryFromReader);
      msg.setChat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateChatNameChanged.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateChatNameChanged.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateChatNameChanged} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateChatNameChanged.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_messages_pb.Messages.InputChat.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Messages.InputChat chat = 1;
 * @return {?proto.v1.Messages.InputChat}
 */
proto.v1.Update.updateChatNameChanged.prototype.getChat = function() {
  return /** @type{?proto.v1.Messages.InputChat} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.InputChat, 1));
};


/**
 * @param {?proto.v1.Messages.InputChat|undefined} value
 * @return {!proto.v1.Update.updateChatNameChanged} returns this
*/
proto.v1.Update.updateChatNameChanged.prototype.setChat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateChatNameChanged} returns this
 */
proto.v1.Update.updateChatNameChanged.prototype.clearChat = function() {
  return this.setChat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateChatNameChanged.prototype.hasChat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.v1.Update.updateChatNameChanged.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateChatNameChanged} returns this
 */
proto.v1.Update.updateChatNameChanged.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateUserAdd.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateUserAdd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateUserAdd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateUserAdd.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && layer1_users_pb.Users.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateUserAdd}
 */
proto.v1.Update.updateUserAdd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateUserAdd;
  return proto.v1.Update.updateUserAdd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateUserAdd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateUserAdd}
 */
proto.v1.Update.updateUserAdd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_users_pb.Users.User;
      reader.readMessage(value,layer1_users_pb.Users.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateUserAdd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateUserAdd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateUserAdd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateUserAdd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_users_pb.Users.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional Users.User user = 1;
 * @return {?proto.v1.Users.User}
 */
proto.v1.Update.updateUserAdd.prototype.getUser = function() {
  return /** @type{?proto.v1.Users.User} */ (
    jspb.Message.getWrapperField(this, layer1_users_pb.Users.User, 1));
};


/**
 * @param {?proto.v1.Users.User|undefined} value
 * @return {!proto.v1.Update.updateUserAdd} returns this
*/
proto.v1.Update.updateUserAdd.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateUserAdd} returns this
 */
proto.v1.Update.updateUserAdd.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateUserAdd.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateUserDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateUserDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateUserDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateUserDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateUserDelete}
 */
proto.v1.Update.updateUserDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateUserDelete;
  return proto.v1.Update.updateUserDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateUserDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateUserDelete}
 */
proto.v1.Update.updateUserDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {!proto.v1.Update.updateUserDelete.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateUserDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateUserDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateUserDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateUserDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.v1.Update.updateUserDelete.Reason = {
  KICKED: 0,
  COMPANY_DELETED: 1
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.v1.Update.updateUserDelete.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateUserDelete} returns this
 */
proto.v1.Update.updateUserDelete.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.v1.Update.updateUserDelete.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateUserDelete} returns this
 */
proto.v1.Update.updateUserDelete.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Reason reason = 3;
 * @return {!proto.v1.Update.updateUserDelete.Reason}
 */
proto.v1.Update.updateUserDelete.prototype.getReason = function() {
  return /** @type {!proto.v1.Update.updateUserDelete.Reason} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.v1.Update.updateUserDelete.Reason} value
 * @return {!proto.v1.Update.updateUserDelete} returns this
 */
proto.v1.Update.updateUserDelete.prototype.setReason = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateReadHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateReadHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateReadHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateReadHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f),
    maxId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    unreadCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    unreadTotal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unreadMuted: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tabId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    mentions: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mentionsTotal: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateReadHistory}
 */
proto.v1.Update.updateReadHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateReadHistory;
  return proto.v1.Update.updateReadHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateReadHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateReadHistory}
 */
proto.v1.Update.updateReadHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnreadCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnreadTotal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnreadMuted(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTabId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMentions(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMentionsTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateReadHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateReadHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateReadHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateReadHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
  f = message.getMaxId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUnreadCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUnreadTotal();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getUnreadMuted();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getTabId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMentions();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getMentionsTotal();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional Messages.Peer peer = 1;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.updateReadHistory.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 1));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
*/
proto.v1.Update.updateReadHistory.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateReadHistory.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string max_id = 2;
 * @return {string}
 */
proto.v1.Update.updateReadHistory.prototype.getMaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setMaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 unread_count = 3;
 * @return {number}
 */
proto.v1.Update.updateReadHistory.prototype.getUnreadCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setUnreadCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 unread_total = 4;
 * @return {number}
 */
proto.v1.Update.updateReadHistory.prototype.getUnreadTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setUnreadTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 unread_muted = 5;
 * @return {number}
 */
proto.v1.Update.updateReadHistory.prototype.getUnreadMuted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setUnreadMuted = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string tab_id = 6;
 * @return {string}
 */
proto.v1.Update.updateReadHistory.prototype.getTabId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setTabId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 mentions = 7;
 * @return {number}
 */
proto.v1.Update.updateReadHistory.prototype.getMentions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setMentions = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 mentions_total = 8;
 * @return {number}
 */
proto.v1.Update.updateReadHistory.prototype.getMentionsTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update.updateReadHistory} returns this
 */
proto.v1.Update.updateReadHistory.prototype.setMentionsTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.Update.UserAction.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.v1.Update.UserAction.ActionCase = {
  ACTION_NOT_SET: 0,
  TYPING: 10,
  RECORDING_VOICE: 11
};

/**
 * @return {proto.v1.Update.UserAction.ActionCase}
 */
proto.v1.Update.UserAction.prototype.getActionCase = function() {
  return /** @type {proto.v1.Update.UserAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.v1.Update.UserAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.UserAction.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.UserAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.UserAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.UserAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    typing: (f = msg.getTyping()) && layer1_messages_pb.Messages.UserActionTyping.toObject(includeInstance, f),
    recordingVoice: (f = msg.getRecordingVoice()) && layer1_messages_pb.Messages.UserActionRecordingVoice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.UserAction}
 */
proto.v1.Update.UserAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.UserAction;
  return proto.v1.Update.UserAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.UserAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.UserAction}
 */
proto.v1.Update.UserAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 10:
      var value = new layer1_messages_pb.Messages.UserActionTyping;
      reader.readMessage(value,layer1_messages_pb.Messages.UserActionTyping.deserializeBinaryFromReader);
      msg.setTyping(value);
      break;
    case 11:
      var value = new layer1_messages_pb.Messages.UserActionRecordingVoice;
      reader.readMessage(value,layer1_messages_pb.Messages.UserActionRecordingVoice.deserializeBinaryFromReader);
      msg.setRecordingVoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.UserAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.UserAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.UserAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.UserAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTyping();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      layer1_messages_pb.Messages.UserActionTyping.serializeBinaryToWriter
    );
  }
  f = message.getRecordingVoice();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      layer1_messages_pb.Messages.UserActionRecordingVoice.serializeBinaryToWriter
    );
  }
};


/**
 * optional Messages.Peer peer = 1;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.UserAction.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 1));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.UserAction} returns this
*/
proto.v1.Update.UserAction.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UserAction} returns this
 */
proto.v1.Update.UserAction.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UserAction.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.v1.Update.UserAction.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.UserAction} returns this
 */
proto.v1.Update.UserAction.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Messages.UserActionTyping typing = 10;
 * @return {?proto.v1.Messages.UserActionTyping}
 */
proto.v1.Update.UserAction.prototype.getTyping = function() {
  return /** @type{?proto.v1.Messages.UserActionTyping} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.UserActionTyping, 10));
};


/**
 * @param {?proto.v1.Messages.UserActionTyping|undefined} value
 * @return {!proto.v1.Update.UserAction} returns this
*/
proto.v1.Update.UserAction.prototype.setTyping = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.v1.Update.UserAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UserAction} returns this
 */
proto.v1.Update.UserAction.prototype.clearTyping = function() {
  return this.setTyping(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UserAction.prototype.hasTyping = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Messages.UserActionRecordingVoice recording_voice = 11;
 * @return {?proto.v1.Messages.UserActionRecordingVoice}
 */
proto.v1.Update.UserAction.prototype.getRecordingVoice = function() {
  return /** @type{?proto.v1.Messages.UserActionRecordingVoice} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.UserActionRecordingVoice, 11));
};


/**
 * @param {?proto.v1.Messages.UserActionRecordingVoice|undefined} value
 * @return {!proto.v1.Update.UserAction} returns this
*/
proto.v1.Update.UserAction.prototype.setRecordingVoice = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.v1.Update.UserAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UserAction} returns this
 */
proto.v1.Update.UserAction.prototype.clearRecordingVoice = function() {
  return this.setRecordingVoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UserAction.prototype.hasRecordingVoice = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.v1.Update.UserStatus.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.v1.Update.UserStatus.StatusCase = {
  STATUS_NOT_SET: 0,
  ONLINE: 10,
  OFFLINE: 11
};

/**
 * @return {proto.v1.Update.UserStatus.StatusCase}
 */
proto.v1.Update.UserStatus.prototype.getStatusCase = function() {
  return /** @type {proto.v1.Update.UserStatus.StatusCase} */(jspb.Message.computeOneofCase(this, proto.v1.Update.UserStatus.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.UserStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.UserStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.UserStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.UserStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    online: (f = msg.getOnline()) && layer1_account_pb.Account.UserStatusOnline.toObject(includeInstance, f),
    offline: (f = msg.getOffline()) && layer1_account_pb.Account.UserStatusOffline.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.UserStatus}
 */
proto.v1.Update.UserStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.UserStatus;
  return proto.v1.Update.UserStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.UserStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.UserStatus}
 */
proto.v1.Update.UserStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 10:
      var value = new layer1_account_pb.Account.UserStatusOnline;
      reader.readMessage(value,layer1_account_pb.Account.UserStatusOnline.deserializeBinaryFromReader);
      msg.setOnline(value);
      break;
    case 11:
      var value = new layer1_account_pb.Account.UserStatusOffline;
      reader.readMessage(value,layer1_account_pb.Account.UserStatusOffline.deserializeBinaryFromReader);
      msg.setOffline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.UserStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.UserStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.UserStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.UserStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOnline();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      layer1_account_pb.Account.UserStatusOnline.serializeBinaryToWriter
    );
  }
  f = message.getOffline();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      layer1_account_pb.Account.UserStatusOffline.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.v1.Update.UserStatus.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.UserStatus} returns this
 */
proto.v1.Update.UserStatus.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Account.UserStatusOnline online = 10;
 * @return {?proto.v1.Account.UserStatusOnline}
 */
proto.v1.Update.UserStatus.prototype.getOnline = function() {
  return /** @type{?proto.v1.Account.UserStatusOnline} */ (
    jspb.Message.getWrapperField(this, layer1_account_pb.Account.UserStatusOnline, 10));
};


/**
 * @param {?proto.v1.Account.UserStatusOnline|undefined} value
 * @return {!proto.v1.Update.UserStatus} returns this
*/
proto.v1.Update.UserStatus.prototype.setOnline = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.v1.Update.UserStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UserStatus} returns this
 */
proto.v1.Update.UserStatus.prototype.clearOnline = function() {
  return this.setOnline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UserStatus.prototype.hasOnline = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Account.UserStatusOffline offline = 11;
 * @return {?proto.v1.Account.UserStatusOffline}
 */
proto.v1.Update.UserStatus.prototype.getOffline = function() {
  return /** @type{?proto.v1.Account.UserStatusOffline} */ (
    jspb.Message.getWrapperField(this, layer1_account_pb.Account.UserStatusOffline, 11));
};


/**
 * @param {?proto.v1.Account.UserStatusOffline|undefined} value
 * @return {!proto.v1.Update.UserStatus} returns this
*/
proto.v1.Update.UserStatus.prototype.setOffline = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.v1.Update.UserStatus.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UserStatus} returns this
 */
proto.v1.Update.UserStatus.prototype.clearOffline = function() {
  return this.setOffline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UserStatus.prototype.hasOffline = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.CompanyCounter.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.CompanyCounter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.CompanyCounter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.CompanyCounter.toObject = function(includeInstance, msg) {
  var f, obj = {
    counter: (f = msg.getCounter()) && layer1_updates_pb.Updates.CompanyUnreadCounter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.CompanyCounter}
 */
proto.v1.Update.CompanyCounter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.CompanyCounter;
  return proto.v1.Update.CompanyCounter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.CompanyCounter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.CompanyCounter}
 */
proto.v1.Update.CompanyCounter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_updates_pb.Updates.CompanyUnreadCounter;
      reader.readMessage(value,layer1_updates_pb.Updates.CompanyUnreadCounter.deserializeBinaryFromReader);
      msg.setCounter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.CompanyCounter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.CompanyCounter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.CompanyCounter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.CompanyCounter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCounter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_updates_pb.Updates.CompanyUnreadCounter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Updates.CompanyUnreadCounter counter = 1;
 * @return {?proto.v1.Updates.CompanyUnreadCounter}
 */
proto.v1.Update.CompanyCounter.prototype.getCounter = function() {
  return /** @type{?proto.v1.Updates.CompanyUnreadCounter} */ (
    jspb.Message.getWrapperField(this, layer1_updates_pb.Updates.CompanyUnreadCounter, 1));
};


/**
 * @param {?proto.v1.Updates.CompanyUnreadCounter|undefined} value
 * @return {!proto.v1.Update.CompanyCounter} returns this
*/
proto.v1.Update.CompanyCounter.prototype.setCounter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.CompanyCounter} returns this
 */
proto.v1.Update.CompanyCounter.prototype.clearCounter = function() {
  return this.setCounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.CompanyCounter.prototype.hasCounter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.UpdateNotifySettings.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.UpdateNotifySettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.UpdateNotifySettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.UpdateNotifySettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f),
    notificationSettings: (f = msg.getNotificationSettings()) && layer1_notification_pb.Notification.Settings.toObject(includeInstance, f),
    tabId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.UpdateNotifySettings}
 */
proto.v1.Update.UpdateNotifySettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.UpdateNotifySettings;
  return proto.v1.Update.UpdateNotifySettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.UpdateNotifySettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.UpdateNotifySettings}
 */
proto.v1.Update.UpdateNotifySettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = new layer1_notification_pb.Notification.Settings;
      reader.readMessage(value,layer1_notification_pb.Notification.Settings.deserializeBinaryFromReader);
      msg.setNotificationSettings(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTabId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.UpdateNotifySettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.UpdateNotifySettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.UpdateNotifySettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.UpdateNotifySettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
  f = message.getNotificationSettings();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      layer1_notification_pb.Notification.Settings.serializeBinaryToWriter
    );
  }
  f = message.getTabId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string app_id = 1;
 * @return {string}
 */
proto.v1.Update.UpdateNotifySettings.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.UpdateNotifySettings} returns this
 */
proto.v1.Update.UpdateNotifySettings.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages.Peer peer = 2;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.UpdateNotifySettings.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 2));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.UpdateNotifySettings} returns this
*/
proto.v1.Update.UpdateNotifySettings.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UpdateNotifySettings} returns this
 */
proto.v1.Update.UpdateNotifySettings.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UpdateNotifySettings.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Notification.Settings notification_settings = 3;
 * @return {?proto.v1.Notification.Settings}
 */
proto.v1.Update.UpdateNotifySettings.prototype.getNotificationSettings = function() {
  return /** @type{?proto.v1.Notification.Settings} */ (
    jspb.Message.getWrapperField(this, layer1_notification_pb.Notification.Settings, 3));
};


/**
 * @param {?proto.v1.Notification.Settings|undefined} value
 * @return {!proto.v1.Update.UpdateNotifySettings} returns this
*/
proto.v1.Update.UpdateNotifySettings.prototype.setNotificationSettings = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.UpdateNotifySettings} returns this
 */
proto.v1.Update.UpdateNotifySettings.prototype.clearNotificationSettings = function() {
  return this.setNotificationSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.UpdateNotifySettings.prototype.hasNotificationSettings = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string tab_id = 4;
 * @return {string}
 */
proto.v1.Update.UpdateNotifySettings.prototype.getTabId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.UpdateNotifySettings} returns this
 */
proto.v1.Update.UpdateNotifySettings.prototype.setTabId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateHistoryClean.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateHistoryClean.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateHistoryClean} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateHistoryClean.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f),
    tabId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateHistoryClean}
 */
proto.v1.Update.updateHistoryClean.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateHistoryClean;
  return proto.v1.Update.updateHistoryClean.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateHistoryClean} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateHistoryClean}
 */
proto.v1.Update.updateHistoryClean.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTabId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateHistoryClean.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateHistoryClean.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateHistoryClean} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateHistoryClean.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
  f = message.getTabId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.v1.Update.updateHistoryClean.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateHistoryClean} returns this
 */
proto.v1.Update.updateHistoryClean.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages.Peer peer = 2;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.updateHistoryClean.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 2));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.updateHistoryClean} returns this
*/
proto.v1.Update.updateHistoryClean.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateHistoryClean} returns this
 */
proto.v1.Update.updateHistoryClean.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateHistoryClean.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tab_id = 3;
 * @return {string}
 */
proto.v1.Update.updateHistoryClean.prototype.getTabId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateHistoryClean} returns this
 */
proto.v1.Update.updateHistoryClean.prototype.setTabId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.MessageDeliveryStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.MessageDeliveryStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.MessageDeliveryStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.MessageDeliveryStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deliveryStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.MessageDeliveryStatus}
 */
proto.v1.Update.MessageDeliveryStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.MessageDeliveryStatus;
  return proto.v1.Update.MessageDeliveryStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.MessageDeliveryStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.MessageDeliveryStatus}
 */
proto.v1.Update.MessageDeliveryStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {!proto.v1.Messages.Flags} */ (reader.readEnum());
      msg.setDeliveryStatus(value);
      break;
    case 3:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.MessageDeliveryStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.MessageDeliveryStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.MessageDeliveryStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.MessageDeliveryStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeliveryStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.v1.Update.MessageDeliveryStatus.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.MessageDeliveryStatus} returns this
 */
proto.v1.Update.MessageDeliveryStatus.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages.Flags delivery_status = 2;
 * @return {!proto.v1.Messages.Flags}
 */
proto.v1.Update.MessageDeliveryStatus.prototype.getDeliveryStatus = function() {
  return /** @type {!proto.v1.Messages.Flags} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.v1.Messages.Flags} value
 * @return {!proto.v1.Update.MessageDeliveryStatus} returns this
 */
proto.v1.Update.MessageDeliveryStatus.prototype.setDeliveryStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Messages.Peer peer = 3;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.MessageDeliveryStatus.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 3));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.MessageDeliveryStatus} returns this
*/
proto.v1.Update.MessageDeliveryStatus.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.MessageDeliveryStatus} returns this
 */
proto.v1.Update.MessageDeliveryStatus.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.MessageDeliveryStatus.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateMessageTranscriptionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateMessageTranscriptionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateMessageTranscriptionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus}
 */
proto.v1.Update.updateMessageTranscriptionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateMessageTranscriptionStatus;
  return proto.v1.Update.updateMessageTranscriptionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateMessageTranscriptionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus}
 */
proto.v1.Update.updateMessageTranscriptionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {!proto.v1.Update.updateMessageTranscriptionStatus.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateMessageTranscriptionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateMessageTranscriptionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateMessageTranscriptionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.v1.Update.updateMessageTranscriptionStatus.Status = {
  WAITING: 0,
  ERROR: 1,
  COMPLETE: 2
};

/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus} returns this
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Messages.Peer peer = 2;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 2));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus} returns this
*/
proto.v1.Update.updateMessageTranscriptionStatus.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus} returns this
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Status status = 3;
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus.Status}
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.getStatus = function() {
  return /** @type {!proto.v1.Update.updateMessageTranscriptionStatus.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.v1.Update.updateMessageTranscriptionStatus.Status} value
 * @return {!proto.v1.Update.updateMessageTranscriptionStatus} returns this
 */
proto.v1.Update.updateMessageTranscriptionStatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateRTC.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateRTC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateRTC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateRTC.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionInfo: (f = msg.getSessionInfo()) && layer1_caller_v1_session_pb.SessionInfo.toObject(includeInstance, f),
    options: (f = msg.getOptions()) && layer1_caller_v1_signaling_pb.ConnectOptions.toObject(includeInstance, f),
    desc: (f = msg.getDesc()) && proto.v1.Update.updateRTC.Description.toObject(includeInstance, f),
    token: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateRTC}
 */
proto.v1.Update.updateRTC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateRTC;
  return proto.v1.Update.updateRTC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateRTC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateRTC}
 */
proto.v1.Update.updateRTC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_caller_v1_session_pb.SessionInfo;
      reader.readMessage(value,layer1_caller_v1_session_pb.SessionInfo.deserializeBinaryFromReader);
      msg.setSessionInfo(value);
      break;
    case 2:
      var value = new layer1_caller_v1_signaling_pb.ConnectOptions;
      reader.readMessage(value,layer1_caller_v1_signaling_pb.ConnectOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 3:
      var value = new proto.v1.Update.updateRTC.Description;
      reader.readMessage(value,proto.v1.Update.updateRTC.Description.deserializeBinaryFromReader);
      msg.setDesc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateRTC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateRTC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateRTC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateRTC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_caller_v1_session_pb.SessionInfo.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_caller_v1_signaling_pb.ConnectOptions.serializeBinaryToWriter
    );
  }
  f = message.getDesc();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.v1.Update.updateRTC.Description.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateRTC.Description.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateRTC.Description.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateRTC.Description} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateRTC.Description.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && layer1_users_pb.Users.Account.toObject(includeInstance, f),
    peer: (f = msg.getPeer()) && layer1_messages_pb.Messages.Peer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateRTC.Description}
 */
proto.v1.Update.updateRTC.Description.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateRTC.Description;
  return proto.v1.Update.updateRTC.Description.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateRTC.Description} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateRTC.Description}
 */
proto.v1.Update.updateRTC.Description.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new layer1_users_pb.Users.Account;
      reader.readMessage(value,layer1_users_pb.Users.Account.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = new layer1_messages_pb.Messages.Peer;
      reader.readMessage(value,layer1_messages_pb.Messages.Peer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateRTC.Description.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateRTC.Description.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateRTC.Description} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateRTC.Description.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      layer1_users_pb.Users.Account.serializeBinaryToWriter
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      layer1_messages_pb.Messages.Peer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Users.Account account = 1;
 * @return {?proto.v1.Users.Account}
 */
proto.v1.Update.updateRTC.Description.prototype.getAccount = function() {
  return /** @type{?proto.v1.Users.Account} */ (
    jspb.Message.getWrapperField(this, layer1_users_pb.Users.Account, 1));
};


/**
 * @param {?proto.v1.Users.Account|undefined} value
 * @return {!proto.v1.Update.updateRTC.Description} returns this
*/
proto.v1.Update.updateRTC.Description.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateRTC.Description} returns this
 */
proto.v1.Update.updateRTC.Description.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateRTC.Description.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Messages.Peer peer = 2;
 * @return {?proto.v1.Messages.Peer}
 */
proto.v1.Update.updateRTC.Description.prototype.getPeer = function() {
  return /** @type{?proto.v1.Messages.Peer} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Peer, 2));
};


/**
 * @param {?proto.v1.Messages.Peer|undefined} value
 * @return {!proto.v1.Update.updateRTC.Description} returns this
*/
proto.v1.Update.updateRTC.Description.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateRTC.Description} returns this
 */
proto.v1.Update.updateRTC.Description.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateRTC.Description.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional caller.v1.SessionInfo session_info = 1;
 * @return {?proto.v1.caller.v1.SessionInfo}
 */
proto.v1.Update.updateRTC.prototype.getSessionInfo = function() {
  return /** @type{?proto.v1.caller.v1.SessionInfo} */ (
    jspb.Message.getWrapperField(this, layer1_caller_v1_session_pb.SessionInfo, 1));
};


/**
 * @param {?proto.v1.caller.v1.SessionInfo|undefined} value
 * @return {!proto.v1.Update.updateRTC} returns this
*/
proto.v1.Update.updateRTC.prototype.setSessionInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateRTC} returns this
 */
proto.v1.Update.updateRTC.prototype.clearSessionInfo = function() {
  return this.setSessionInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateRTC.prototype.hasSessionInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional caller.v1.ConnectOptions options = 2;
 * @return {?proto.v1.caller.v1.ConnectOptions}
 */
proto.v1.Update.updateRTC.prototype.getOptions = function() {
  return /** @type{?proto.v1.caller.v1.ConnectOptions} */ (
    jspb.Message.getWrapperField(this, layer1_caller_v1_signaling_pb.ConnectOptions, 2));
};


/**
 * @param {?proto.v1.caller.v1.ConnectOptions|undefined} value
 * @return {!proto.v1.Update.updateRTC} returns this
*/
proto.v1.Update.updateRTC.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateRTC} returns this
 */
proto.v1.Update.updateRTC.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateRTC.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Description desc = 3;
 * @return {?proto.v1.Update.updateRTC.Description}
 */
proto.v1.Update.updateRTC.prototype.getDesc = function() {
  return /** @type{?proto.v1.Update.updateRTC.Description} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateRTC.Description, 3));
};


/**
 * @param {?proto.v1.Update.updateRTC.Description|undefined} value
 * @return {!proto.v1.Update.updateRTC} returns this
*/
proto.v1.Update.updateRTC.prototype.setDesc = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update.updateRTC} returns this
 */
proto.v1.Update.updateRTC.prototype.clearDesc = function() {
  return this.setDesc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.updateRTC.prototype.hasDesc = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.v1.Update.updateRTC.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateRTC} returns this
 */
proto.v1.Update.updateRTC.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.Update.updateCallEnded.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.Update.updateCallEnded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.Update.updateCallEnded} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateCallEnded.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.Update.updateCallEnded}
 */
proto.v1.Update.updateCallEnded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.Update.updateCallEnded;
  return proto.v1.Update.updateCallEnded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.Update.updateCallEnded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.Update.updateCallEnded}
 */
proto.v1.Update.updateCallEnded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.Update.updateCallEnded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.Update.updateCallEnded.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.Update.updateCallEnded} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.Update.updateCallEnded.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.v1.Update.updateCallEnded.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.Update.updateCallEnded} returns this
 */
proto.v1.Update.updateCallEnded.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 pts = 1;
 * @return {number}
 */
proto.v1.Update.prototype.getPts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.setPts = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional updateNewMessage new_message = 2;
 * @return {?proto.v1.Update.updateNewMessage}
 */
proto.v1.Update.prototype.getNewMessage = function() {
  return /** @type{?proto.v1.Update.updateNewMessage} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateNewMessage, 2));
};


/**
 * @param {?proto.v1.Update.updateNewMessage|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setNewMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearNewMessage = function() {
  return this.setNewMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasNewMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional updateChatCreated chat_created = 3;
 * @return {?proto.v1.Update.updateChatCreated}
 */
proto.v1.Update.prototype.getChatCreated = function() {
  return /** @type{?proto.v1.Update.updateChatCreated} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateChatCreated, 3));
};


/**
 * @param {?proto.v1.Update.updateChatCreated|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setChatCreated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearChatCreated = function() {
  return this.setChatCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasChatCreated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional updateChatPartipiants chat_partipiants = 4;
 * @return {?proto.v1.Update.updateChatPartipiants}
 */
proto.v1.Update.prototype.getChatPartipiants = function() {
  return /** @type{?proto.v1.Update.updateChatPartipiants} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateChatPartipiants, 4));
};


/**
 * @param {?proto.v1.Update.updateChatPartipiants|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setChatPartipiants = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearChatPartipiants = function() {
  return this.setChatPartipiants(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasChatPartipiants = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional updateChatPartipiantAdd chat_partipiant_add = 5;
 * @return {?proto.v1.Update.updateChatPartipiantAdd}
 */
proto.v1.Update.prototype.getChatPartipiantAdd = function() {
  return /** @type{?proto.v1.Update.updateChatPartipiantAdd} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateChatPartipiantAdd, 5));
};


/**
 * @param {?proto.v1.Update.updateChatPartipiantAdd|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setChatPartipiantAdd = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearChatPartipiantAdd = function() {
  return this.setChatPartipiantAdd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasChatPartipiantAdd = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional updateChatPartipiantDelete chat_partipiant_delete = 6;
 * @return {?proto.v1.Update.updateChatPartipiantDelete}
 */
proto.v1.Update.prototype.getChatPartipiantDelete = function() {
  return /** @type{?proto.v1.Update.updateChatPartipiantDelete} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateChatPartipiantDelete, 6));
};


/**
 * @param {?proto.v1.Update.updateChatPartipiantDelete|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setChatPartipiantDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearChatPartipiantDelete = function() {
  return this.setChatPartipiantDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasChatPartipiantDelete = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional updateUserAdd user_add = 7;
 * @return {?proto.v1.Update.updateUserAdd}
 */
proto.v1.Update.prototype.getUserAdd = function() {
  return /** @type{?proto.v1.Update.updateUserAdd} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateUserAdd, 7));
};


/**
 * @param {?proto.v1.Update.updateUserAdd|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUserAdd = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUserAdd = function() {
  return this.setUserAdd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUserAdd = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional updateUserDelete user_delete = 8;
 * @return {?proto.v1.Update.updateUserDelete}
 */
proto.v1.Update.prototype.getUserDelete = function() {
  return /** @type{?proto.v1.Update.updateUserDelete} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateUserDelete, 8));
};


/**
 * @param {?proto.v1.Update.updateUserDelete|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUserDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUserDelete = function() {
  return this.setUserDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUserDelete = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional updateReadHistory read_history = 9;
 * @return {?proto.v1.Update.updateReadHistory}
 */
proto.v1.Update.prototype.getReadHistory = function() {
  return /** @type{?proto.v1.Update.updateReadHistory} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateReadHistory, 9));
};


/**
 * @param {?proto.v1.Update.updateReadHistory|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setReadHistory = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearReadHistory = function() {
  return this.setReadHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasReadHistory = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional updateChatNameChanged chat_name_changed = 10;
 * @return {?proto.v1.Update.updateChatNameChanged}
 */
proto.v1.Update.prototype.getChatNameChanged = function() {
  return /** @type{?proto.v1.Update.updateChatNameChanged} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateChatNameChanged, 10));
};


/**
 * @param {?proto.v1.Update.updateChatNameChanged|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setChatNameChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearChatNameChanged = function() {
  return this.setChatNameChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasChatNameChanged = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional UserAction update_user_action = 11;
 * @return {?proto.v1.Update.UserAction}
 */
proto.v1.Update.prototype.getUpdateUserAction = function() {
  return /** @type{?proto.v1.Update.UserAction} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.UserAction, 11));
};


/**
 * @param {?proto.v1.Update.UserAction|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUpdateUserAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUpdateUserAction = function() {
  return this.setUpdateUserAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUpdateUserAction = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional UserStatus update_user_status = 12;
 * @return {?proto.v1.Update.UserStatus}
 */
proto.v1.Update.prototype.getUpdateUserStatus = function() {
  return /** @type{?proto.v1.Update.UserStatus} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.UserStatus, 12));
};


/**
 * @param {?proto.v1.Update.UserStatus|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUpdateUserStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUpdateUserStatus = function() {
  return this.setUpdateUserStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUpdateUserStatus = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional CompanyCounter update_company_counter = 13;
 * @return {?proto.v1.Update.CompanyCounter}
 */
proto.v1.Update.prototype.getUpdateCompanyCounter = function() {
  return /** @type{?proto.v1.Update.CompanyCounter} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.CompanyCounter, 13));
};


/**
 * @param {?proto.v1.Update.CompanyCounter|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUpdateCompanyCounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUpdateCompanyCounter = function() {
  return this.setUpdateCompanyCounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUpdateCompanyCounter = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UpdateNotifySettings update_notification_settings = 14;
 * @return {?proto.v1.Update.UpdateNotifySettings}
 */
proto.v1.Update.prototype.getUpdateNotificationSettings = function() {
  return /** @type{?proto.v1.Update.UpdateNotifySettings} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.UpdateNotifySettings, 14));
};


/**
 * @param {?proto.v1.Update.UpdateNotifySettings|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUpdateNotificationSettings = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUpdateNotificationSettings = function() {
  return this.setUpdateNotificationSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUpdateNotificationSettings = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional MessageUpdatedEvent message_updated = 15;
 * @return {?proto.v1.Update.MessageUpdatedEvent}
 */
proto.v1.Update.prototype.getMessageUpdated = function() {
  return /** @type{?proto.v1.Update.MessageUpdatedEvent} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.MessageUpdatedEvent, 15));
};


/**
 * @param {?proto.v1.Update.MessageUpdatedEvent|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setMessageUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearMessageUpdated = function() {
  return this.setMessageUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasMessageUpdated = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Messages.PinnedDialogsOrder update_pinned_dialogs = 16;
 * @return {?proto.v1.Messages.PinnedDialogsOrder}
 */
proto.v1.Update.prototype.getUpdatePinnedDialogs = function() {
  return /** @type{?proto.v1.Messages.PinnedDialogsOrder} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.PinnedDialogsOrder, 16));
};


/**
 * @param {?proto.v1.Messages.PinnedDialogsOrder|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUpdatePinnedDialogs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUpdatePinnedDialogs = function() {
  return this.setUpdatePinnedDialogs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUpdatePinnedDialogs = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional MessageDeliveryStatus messages_delivery_status_changed = 17;
 * @return {?proto.v1.Update.MessageDeliveryStatus}
 */
proto.v1.Update.prototype.getMessagesDeliveryStatusChanged = function() {
  return /** @type{?proto.v1.Update.MessageDeliveryStatus} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.MessageDeliveryStatus, 17));
};


/**
 * @param {?proto.v1.Update.MessageDeliveryStatus|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setMessagesDeliveryStatusChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearMessagesDeliveryStatusChanged = function() {
  return this.setMessagesDeliveryStatusChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasMessagesDeliveryStatusChanged = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Users.User teammate_changed = 18;
 * @return {?proto.v1.Users.User}
 */
proto.v1.Update.prototype.getTeammateChanged = function() {
  return /** @type{?proto.v1.Users.User} */ (
    jspb.Message.getWrapperField(this, layer1_users_pb.Users.User, 18));
};


/**
 * @param {?proto.v1.Users.User|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setTeammateChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearTeammateChanged = function() {
  return this.setTeammateChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasTeammateChanged = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional updateMessageTranscriptionStatus message_transcription_status_changed = 19;
 * @return {?proto.v1.Update.updateMessageTranscriptionStatus}
 */
proto.v1.Update.prototype.getMessageTranscriptionStatusChanged = function() {
  return /** @type{?proto.v1.Update.updateMessageTranscriptionStatus} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateMessageTranscriptionStatus, 19));
};


/**
 * @param {?proto.v1.Update.updateMessageTranscriptionStatus|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setMessageTranscriptionStatusChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearMessageTranscriptionStatusChanged = function() {
  return this.setMessageTranscriptionStatusChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasMessageTranscriptionStatusChanged = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Users.Account update_company = 20;
 * @return {?proto.v1.Users.Account}
 */
proto.v1.Update.prototype.getUpdateCompany = function() {
  return /** @type{?proto.v1.Users.Account} */ (
    jspb.Message.getWrapperField(this, layer1_users_pb.Users.Account, 20));
};


/**
 * @param {?proto.v1.Users.Account|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setUpdateCompany = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearUpdateCompany = function() {
  return this.setUpdateCompany(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasUpdateCompany = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Account.Tab tab_changed = 21;
 * @return {?proto.v1.Account.Tab}
 */
proto.v1.Update.prototype.getTabChanged = function() {
  return /** @type{?proto.v1.Account.Tab} */ (
    jspb.Message.getWrapperField(this, layer1_account_pb.Account.Tab, 21));
};


/**
 * @param {?proto.v1.Account.Tab|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setTabChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearTabChanged = function() {
  return this.setTabChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasTabChanged = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional Messages.Push push = 22;
 * @return {?proto.v1.Messages.Push}
 */
proto.v1.Update.prototype.getPush = function() {
  return /** @type{?proto.v1.Messages.Push} */ (
    jspb.Message.getWrapperField(this, layer1_messages_pb.Messages.Push, 22));
};


/**
 * @param {?proto.v1.Messages.Push|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setPush = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearPush = function() {
  return this.setPush(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasPush = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional updateAvatar avatar_changed = 23;
 * @return {?proto.v1.Update.updateAvatar}
 */
proto.v1.Update.prototype.getAvatarChanged = function() {
  return /** @type{?proto.v1.Update.updateAvatar} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateAvatar, 23));
};


/**
 * @param {?proto.v1.Update.updateAvatar|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setAvatarChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearAvatarChanged = function() {
  return this.setAvatarChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasAvatarChanged = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional updateHistoryClean history_clean = 24;
 * @return {?proto.v1.Update.updateHistoryClean}
 */
proto.v1.Update.prototype.getHistoryClean = function() {
  return /** @type{?proto.v1.Update.updateHistoryClean} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateHistoryClean, 24));
};


/**
 * @param {?proto.v1.Update.updateHistoryClean|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setHistoryClean = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearHistoryClean = function() {
  return this.setHistoryClean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasHistoryClean = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional Billing.AccountLimitsLeft account_limits_left = 25;
 * @return {?proto.v1.Billing.AccountLimitsLeft}
 */
proto.v1.Update.prototype.getAccountLimitsLeft = function() {
  return /** @type{?proto.v1.Billing.AccountLimitsLeft} */ (
    jspb.Message.getWrapperField(this, layer1_billing_pb.Billing.AccountLimitsLeft, 25));
};


/**
 * @param {?proto.v1.Billing.AccountLimitsLeft|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setAccountLimitsLeft = function(value) {
  return jspb.Message.setOneofWrapperField(this, 25, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearAccountLimitsLeft = function() {
  return this.setAccountLimitsLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasAccountLimitsLeft = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Billing.Order order_updated = 26;
 * @return {?proto.v1.Billing.Order}
 */
proto.v1.Update.prototype.getOrderUpdated = function() {
  return /** @type{?proto.v1.Billing.Order} */ (
    jspb.Message.getWrapperField(this, layer1_billing_pb.Billing.Order, 26));
};


/**
 * @param {?proto.v1.Billing.Order|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setOrderUpdated = function(value) {
  return jspb.Message.setOneofWrapperField(this, 26, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearOrderUpdated = function() {
  return this.setOrderUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasOrderUpdated = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Account.Tab tab_removed = 27;
 * @return {?proto.v1.Account.Tab}
 */
proto.v1.Update.prototype.getTabRemoved = function() {
  return /** @type{?proto.v1.Account.Tab} */ (
    jspb.Message.getWrapperField(this, layer1_account_pb.Account.Tab, 27));
};


/**
 * @param {?proto.v1.Account.Tab|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setTabRemoved = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearTabRemoved = function() {
  return this.setTabRemoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasTabRemoved = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional Account.Applications applications_changed = 28;
 * @return {?proto.v1.Account.Applications}
 */
proto.v1.Update.prototype.getApplicationsChanged = function() {
  return /** @type{?proto.v1.Account.Applications} */ (
    jspb.Message.getWrapperField(this, layer1_account_pb.Account.Applications, 28));
};


/**
 * @param {?proto.v1.Account.Applications|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setApplicationsChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 28, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearApplicationsChanged = function() {
  return this.setApplicationsChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasApplicationsChanged = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional rpa.v1.RequestChangedUpdate rpa_request_changed = 29;
 * @return {?proto.v1.rpa.v1.RequestChangedUpdate}
 */
proto.v1.Update.prototype.getRpaRequestChanged = function() {
  return /** @type{?proto.v1.rpa.v1.RequestChangedUpdate} */ (
    jspb.Message.getWrapperField(this, layer1_rpa_v1_rpa_v1_updates_pb.RequestChangedUpdate, 29));
};


/**
 * @param {?proto.v1.rpa.v1.RequestChangedUpdate|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setRpaRequestChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearRpaRequestChanged = function() {
  return this.setRpaRequestChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasRpaRequestChanged = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional updateRTC call_incoming = 30;
 * @return {?proto.v1.Update.updateRTC}
 */
proto.v1.Update.prototype.getCallIncoming = function() {
  return /** @type{?proto.v1.Update.updateRTC} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateRTC, 30));
};


/**
 * @param {?proto.v1.Update.updateRTC|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setCallIncoming = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearCallIncoming = function() {
  return this.setCallIncoming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasCallIncoming = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional updateCallEnded call_ended = 31;
 * @return {?proto.v1.Update.updateCallEnded}
 */
proto.v1.Update.prototype.getCallEnded = function() {
  return /** @type{?proto.v1.Update.updateCallEnded} */ (
    jspb.Message.getWrapperField(this, proto.v1.Update.updateCallEnded, 31));
};


/**
 * @param {?proto.v1.Update.updateCallEnded|undefined} value
 * @return {!proto.v1.Update} returns this
*/
proto.v1.Update.prototype.setCallEnded = function(value) {
  return jspb.Message.setOneofWrapperField(this, 31, proto.v1.Update.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.clearCallEnded = function() {
  return this.setCallEnded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v1.Update.prototype.hasCallEnded = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint64 server_time = 200;
 * @return {number}
 */
proto.v1.Update.prototype.getServerTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 200, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.Update} returns this
 */
proto.v1.Update.prototype.setServerTime = function(value) {
  return jspb.Message.setProto3IntField(this, 200, value);
};


goog.object.extend(exports, proto.v1);
